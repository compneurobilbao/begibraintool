<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2023.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="f'data/{expInfo[&quot;participant&quot;]}/{expName}_{expInfo[&quot;date&quot;]}'&amp;#10;" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'software_version': '1'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="2" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1920, 1080]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="magnocellular_stimuli" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="MouseGaze" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="scene_camera.json" valType="file" updates="None" name="plCompanionCameraCalibration"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="break_5s_">
      <RoutineSettingsComponent name="break_5s_" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="break_5s_" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_countdown" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_countdown" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(5-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Parvocelular_test">
      <RoutineSettingsComponent name="Parvocelular_test" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Parvocelular_test" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <DotsComponent name="noise_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="80000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_2" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1 - t / 10 if 0 &lt;= t &lt;= 10 else 0" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="noise_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="80000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_4" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1 - t / 10 if 0 &lt;= t &lt;= 10 else 0" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;posicion_estimulo = [stim_x, stim_y] = [0, 0];&amp;#10;stim_2.sf = frecuencia_espacial;&amp;#10;stim_2.orientation = orientacion;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = 0,0&amp;#10;stim_2.sf = frecuencia_espacial&amp;#10;stim_2.orientation = orientacion" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_2.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;logs_parametros_trial_2.setText(&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Posicion Angular: {posicion_angular:.2f}\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Frecuencia Espacial: {frecuencia_espacial:.2f}\n&quot;&amp;#10;    f&quot;Frecuencia Temporal: {frecuencia_temporal:.3f}\n&quot;&amp;#10;    f&quot;Contraste: {contraste:.2f}\n&quot;&amp;#10;    f&quot;Color: {color_r},{color_g},{color_b}\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo:.2f}&quot;&amp;#10;    f&quot;FFT: {FFT:.2f}&quot;&amp;#10;)&amp;#10;&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;stim_2.setPhase(frecuencia_temporal,'+')&amp;#10;#stim_2.setPhase(0.01,'+')&amp;#10;stim_2.draw()&amp;#10;&amp;#10;## FFT if activated&amp;#10;&amp;#10;if FFT != 0:&amp;#10;    frames_por_ciclo = int((frecuencia_monitor / FFT) / 2)&amp;#10;    opacidad = 1 if (frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo else 0&amp;#10;else:&amp;#10;    opacidad = 1&amp;#10;&amp;#10;stim_2.opacity = opacidad&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_2.setText(&quot;El ratón está dentro de la circunferencia&quot;)&amp;#10;    # Aquí puedes hacer que el estímulo grating sea visible si es necesario&amp;#10;      # o cualquier acción que quieras realizar&amp;#10;else:&amp;#10;    logs_2.setText(&quot;El ratón está fuera de la circunferencia&quot;)&amp;#10;    # El ratón está fuera de la circunferencia&amp;#10;    # Aquí puedes hacer que el estímulo grating sea invisible si es necesario&amp;#10;    # o cualquier acción que quieras realizar&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_2.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_2.setText(`Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Posicion Angular: ${util.pad(Number.parseFloat(posicion_angular).toFixed(2), 1)}&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Frecuencia Espacial: ${util.pad(Number.parseFloat(frecuencia_espacial).toFixed(2), 1)}&amp;#10;Frecuencia Temporal: ${util.pad(Number.parseFloat(frecuencia_temporal).toFixed(3), 1)}&amp;#10;Contraste: ${util.pad(Number.parseFloat(contraste).toFixed(2), 1)}&amp;#10;Color: ${color_r},${color_g},${color_b}&amp;#10;Tamaño: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}FFT: ${util.pad(Number.parseFloat(FFT).toFixed(2), 1)}`&amp;#10;);&amp;#10;stim_2.setPhase(frecuencia_temporal, &quot;+&quot;);&amp;#10;stim_2.draw();&amp;#10;if ((FFT !== 0)) {&amp;#10;    frames_por_ciclo = Number.parseInt(((frecuencia_monitor / FFT) / 2));&amp;#10;    opacidad = (((frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo) ? 1 : 0);&amp;#10;} else {&amp;#10;    opacidad = 1;&amp;#10;}&amp;#10;stim_2.opacity = opacidad;&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_2.setText(&quot;El rat\u00f3n est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_2.setText(&quot;El rat\u00f3n est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="foveal_region_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="foveal_region_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="slider_2" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="0.1" valType="code" updates="None" name="initVal"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <GratingComponent name="stim_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="color_r,color_g/100,color_b" valType="color" updates="set every repeat" name="color"/>
        <Param val="hsv" valType="str" updates="constant" name="colorSpace"/>
        <Param val="contraste" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim_2" valType="code" updates="None" name="name"/>
        <Param val="0.7" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every frame" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
    </Routine>
    <Routine name="calibration_routine">
      <RoutineSettingsComponent name="calibration_routine" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="calibration_routine" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <SliderComponent name="slider_3" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="0.5" valType="code" updates="None" name="initVal"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="periphereal_region_diameter = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="periphereal_region_diameter = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="#periphereal_region_diameter = 0.5&amp;#10;&amp;#10;if slider_3.getRating() is not None:&amp;#10;    periphereal_region_diameter = slider_3.getRating()&amp;#10;    &amp;#10;log_calibration.setText(f&quot;Foveal region diameter: {periphereal_region_diameter:.2f}&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((slider_3.getRating() !== null)) {&amp;#10;    periphereal_region_diameter = slider_3.getRating();&amp;#10;}&amp;#10;log_calibration.setText(`Foveal region diameter: ${util.pad(Number.parseFloat(periphereal_region_diameter).toFixed(2), 1)}`);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ButtonComponent name="button" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0" valType="num" updates="constant" name="borderWidth"/>
        <Param val="" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="darkgrey" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(0.45, 0.450)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.15, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Click here when calibrated" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <PolygonComponent name="periphereal_region_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="periphereal_region_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="periphereal_region_diameter" valType="list" updates="set every frame" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="log_calibration" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="log_calibration" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions">
      <RoutineSettingsComponent name="instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="logo_bio" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/BIOBIZKAIA_horizontal_CMYK.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="logo_bio" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.4, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="logo_compneurolab" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/compneuro_horizontal.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="logo_compneurolab" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.6, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="text_title" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_title" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="TEST DE EVALUACIÓN DE LOS SISTEMAS MAGNOCELULAR Y PARVOCELULAR" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_instructions" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_instructions" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.20)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_5" plugin="None">
        <Param val="instruction_no = 0&amp;#10;messages_instructions = [&quot;Bienvenido/a al estudio sobre el rendimiento del sistema visual. En este experimento, observarás varios estímulos visuales presentados en diferentes zonas de la pantalla, que corresponden a la zona periférica o central de la retina.&quot;,&amp;#10;&quot;Se te mostrarán parches de Gabor, que varían en posición, color, fase, frecuencia espacial y temporal. Tu tarea es mantener la mirada fijada en el centro de la pantalla mientras observas los cambios en los estímulos periféricos sin mover los ojos.&quot;,&amp;#10;&quot;Cada cinco ensayos, tendrás un descanso de 5 segundos. Es importante mantener la atención durante los ensayos y descansar durante los intervalos para optimizar tu rendimiento.&quot;,&amp;#10;&quot;Comenzaremos con un ensayo de práctica antes de proceder con los ensayos que serán registrados.&quot;,&amp;#10;&quot;Presiona la barra espaciadora cuando estés listo/a para comenzar. Si tienes alguna pregunta o necesitas más información, no dudes en preguntar.&quot;]" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="instruction_no = 0;&amp;#10;messages_instructions = [&quot;Bienvenido/a al estudio sobre el rendimiento del sistema visual. En este experimento, observar\u00e1s varios est\u00edmulos visuales presentados en diferentes zonas de la pantalla, que corresponden a la zona perif\u00e9rica o central de la retina.&quot;, &quot;Se te mostrar\u00e1n parches de Gabor, que var\u00edan en posici\u00f3n, color, fase, frecuencia espacial y temporal. Tu tarea es mantener la mirada fijada en el centro de la pantalla mientras observas los cambios en los est\u00edmulos perif\u00e9ricos sin mover los ojos.&quot;, &quot;Cada cinco ensayos, tendr\u00e1s un descanso de 5 segundos. Es importante mantener la atenci\u00f3n durante los ensayos y descansar durante los intervalos para optimizar tu rendimiento.&quot;, &quot;Comenzaremos con un ensayo de pr\u00e1ctica antes de proceder con los ensayos que ser\u00e1n registrados.&quot;, &quot;Presiona la barra espaciadora cuando est\u00e9s listo/a para comenzar. Si tienes alguna pregunta o necesitas m\u00e1s informaci\u00f3n, no dudes en preguntar.&quot;];&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#text_instructions.alignHoriz='left'&amp;#10;#text_instructions.wrapWidth=1.0&amp;#10;instruction_no = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="instruction_no = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_instructions.text = messages_instructions[instruction_no]&amp;#10;    &amp;#10;if instruction_no == (len(messages_instructions) - 1):&amp;#10;    button_next_instruction.opacity = 0&amp;#10;    #button_next_instruction.status = PAUSED&amp;#10;else:&amp;#10;    button_next_instruction.opacity = 1.0&amp;#10;    #button_next_instruction.status = STARTED&amp;#10;&amp;#10;if instruction_no == 0:&amp;#10;    button_previous_instruction.opacity = 0&amp;#10;    #button_previous_instruction.status = PAUSED&amp;#10;else:&amp;#10;    button_previous_instruction.opacity = 1.0&amp;#10;    #button_previous_instruction.status = STARTED&amp;#10;&amp;#10;###################################################&amp;#10;####________________EVENTS_____________________####&amp;#10;###################################################&amp;#10;&amp;#10;keys = event.getKeys()  # Cada llamada al buffer lo vaciía (teoricamente)&amp;#10;&amp;#10;if 'space' in keys:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;text_instructions.text = messages_instructions[instruction_no];&amp;#10;if ((instruction_no === (messages_instructions.length - 1))) {&amp;#10;    button_next_instruction.opacity = 0;&amp;#10;} else {&amp;#10;    button_next_instruction.opacity = 1.0;&amp;#10;}&amp;#10;if ((instruction_no === 0)) {&amp;#10;    button_previous_instruction.opacity = 0;&amp;#10;} else {&amp;#10;    button_previous_instruction.opacity = 1.0;&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ButtonComponent name="button_next_instruction" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0.1" valType="num" updates="constant" name="borderWidth"/>
        <Param val="if instruction_no &lt; len(messages_instructions)-1:&amp;#10;    instruction_no+=1" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 0.0039, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button_next_instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(0.5, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Siguiente --&gt;" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <ButtonComponent name="button_previous_instruction" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0.1" valType="num" updates="constant" name="borderWidth"/>
        <Param val="if 0 &lt; instruction_no:&amp;#10;    instruction_no-=1" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 0.0039, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button_previous_instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(-0.5, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;--Anterior" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <KeyboardComponent name="key_resp_skip_instructions" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_skip_instructions" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="pallete">
      <RoutineSettingsComponent name="pallete" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="pallete" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="gratings = [&amp;#10;grating_1, &amp;#10;grating_2, &amp;#10;grating_3, &amp;#10;grating_4, &amp;#10;grating_5, &amp;#10;grating_6]&amp;#10;&amp;#10;positions = [&amp;#10;(-0.5, 0.25),&amp;#10;( 0,   0.25),&amp;#10;( 0.5, 0.25),&amp;#10;(-0.5,-0.25),&amp;#10;( 0,  -0.25),&amp;#10;( 0.5,-0.25)&amp;#10;]&amp;#10;&amp;#10;contrasts = [&amp;#10;0,&amp;#10;0.2,&amp;#10;0.4,&amp;#10;0.6,&amp;#10;0.8,&amp;#10;1.0&amp;#10;]&amp;#10;&amp;#10;for i, grating in enumerate(gratings):&amp;#10;    grating.size = (0.25, 0.25)&amp;#10;    grating.pos = positions[i]&amp;#10;    grating.mask = &quot;circle&quot;&amp;#10;    grating.sf = 10&amp;#10;    grating.contrast = contrasts[i]&amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="logs_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <GratingComponent name="grating_1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="circle" valType="file" updates="constant" name="mask"/>
        <Param val="grating_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <GratingComponent name="grating_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="file" updates="constant" name="mask"/>
        <Param val="grating_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
    </Routine>
    <Routine name="GazePoint_test">
      <RoutineSettingsComponent name="GazePoint_test" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="GazePoint_test" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;FPOGX = 0&amp;#10;FPOGY = 0&amp;#10;FPOGV = 0&amp;#10;CX = 0&amp;#10;CY = 0&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;print(&quot;DIAL:&quot;, DIAL)&amp;#10;print(&quot;HR:&quot;, HR)&amp;#10;print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;console.log(data_r);&amp;#10;FPOGX = 0;&amp;#10;FPOGY = 0;&amp;#10;FPOGV = 0;&amp;#10;CX = 0;&amp;#10;CY = 0;&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;console.log(datalist);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;console.log(&quot;DIAL:&quot;, DIAL);&amp;#10;console.log(&quot;HR:&quot;, HR);&amp;#10;console.log(&quot;\n&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_6" plugin="None">
        <Param val="'y','n','left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="GP_logs" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="polygon_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="DIAL*360" valType="num" updates="set every frame" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="line" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="BL_1_SPATIAL_FREQ">
      <RoutineSettingsComponent name="BL_1_SPATIAL_FREQ" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_1_SPATIAL_FREQ" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <DotsComponent name="dots_black_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_5" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_white_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_5" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <GratingComponent name="stim" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$grating_mask" valType="file" updates="constant" name="mask"/>
        <Param val="stim" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="grating_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sqr" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;function get_threshold(test_var_name, results_csv_path) {&amp;#10;    var data, n_reversals_to_average, reversal_data, threshold;&amp;#10;    data = pd.read_csv(results_csv_path);&amp;#10;    reversal_data = data[(data[&quot;reversals&quot;] &gt; 0)];&amp;#10;    n_reversals_to_average = 9;&amp;#10;    threshold = reversal_data[test_var_name].tail(n_reversals_to_average).mean();&amp;#10;    return threshold;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;get_threshold(&quot;saturation&quot;, &quot;./data/saturation_staircase_test_data.csv&quot;);&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim.sf = frecuencia_espacial;&amp;#10;stim.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="####################################################&amp;#10;########____LOAD STAIRCASE TEST RESULTS____#########&amp;#10;####################################################&amp;#10;#threshold_dict = load_thresholds_from_json()&amp;#10;spatial_frequency_threshold = threshold_dict['spatial_frequency_threshold']&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim.sf = spatial_frequency_threshold + spatial_frequency_threshold*offset_porcentual/100&amp;#10;stim.ori = orientacion&amp;#10;&amp;#10;&amp;#10;#other&amp;#10;&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial.alignText='left'&amp;#10;logs_parametros_trial.anchorHoriz='left'&amp;#10;&amp;#10;event.clearEvents()&amp;#10;&amp;#10;first_frame             = True&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;success                 = -1&amp;#10;undecided               = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial.setText(&amp;#10;    f&quot;Prueba 1 - Frecuencia espacial\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {grating_size[0]:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;&amp;#10;    f&quot;Umbral frecuencia espacial: {spatial_frequency_threshold:.2f}\n&quot;&amp;#10;    f&quot;Offset aplicado: {offset_porcentual}\n&quot;&amp;#10;    f&quot;SF mostrado: {spatial_frequency_threshold + spatial_frequency_threshold*offset_porcentual/100:.2f}&quot; &amp;#10;)&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs.setText(&quot;La mirada está dentro de la región&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs.setText(&quot;La mirada está fuera de la región&quot;)  &amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;undecided               = False&amp;#10;success                 = -1&amp;#10;&amp;#10;# TODO: pasar a funcion&amp;#10;&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    flag_skip_all = True&amp;#10;    &amp;#10;elif 'right' in keys and orientacion == 45: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'left' in keys and orientacion == 135: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'right' in keys or 'left' in keys: # Respuesta incorrecta&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;elif 'down' in keys: # NS/NC&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;    undecided               = True&amp;#10;&amp;#10;####################################################&amp;#10;###############____TIME &amp; NOISE____#################&amp;#10;####################################################&amp;#10;&amp;#10;if first_frame: # Ejecucion unica&amp;#10;    dots_white_5.setAutoDraw(False)&amp;#10;    dots_black_5.setAutoDraw(False)&amp;#10;    first_time = False&amp;#10;&amp;#10;if (t&gt;stim_time) or flag_answer_registered: # time exceeded OR answer registered&amp;#10;    # SHOW RESULTS IF FEEDBACK ACTIVATED&amp;#10;    if FEEDBACK:&amp;#10;            print(f&quot;El resultado es: {success}&quot;)&amp;#10;            show_feedback(feedback_txt, success)&amp;#10;    # SHOW NOISE&amp;#10;    stim.setAutoDraw(False)&amp;#10;    show_noise(dots_white_5, dots_black_5, response_time, orientacion, feedback_txt) #only one call&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if flag_skip_all:&amp;#10;    print(&quot;Se ha omitido el bloque BL_1 por activación del flag&quot;)&amp;#10;    trials_bl_1.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial.setText(`Prueba 1 - Frecuencia espacial&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}&amp;#10;Frecuencia Espacial: ${util.pad(Number.parseFloat(frecuencia_espacial).toFixed(2), 1)}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'space', 'right', 'left', 'down'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_2.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_2.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="gaze" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="feedback_txt" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.085" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_txt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="BL_8_TEMPORAL_FREQ">
      <RoutineSettingsComponent name="BL_8_TEMPORAL_FREQ" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_8_TEMPORAL_FREQ" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_10" plugin="None">
        <Param val="frecuencia_monitor = 60&amp;#10;frecuencia_parpadeo = 30  # Hz, cambia este valor por la frecuencia deseada&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim_3.sf = frecuencia_espacial;&amp;#10;stim_3.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    import math&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim_3.sf = frecuencia_espacial&amp;#10;stim_3.orientation = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_3.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_3.setText(&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Posicion Angular: {posicion_angular:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Diametro 9º: {diametros_central_periferica[0]:.2f}, {diametros_central_periferica[1]:.2f}\n&quot;&amp;#10;    f&quot;Diametro {excentricidad}º: {diametros_estimulo[0]:.2f}, {diametros_estimulo[1]:.2f}\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Frecuencia Temporal: {frecuencia_temporal:.3f}\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo:.2f}\n&quot;&amp;#10;)&amp;#10;&amp;#10;logs_screen_specs_2.setText(&amp;#10;    f&quot;Pantalla: {nombre_pantalla}\n&quot;&amp;#10;    f&quot;Altura pantalla: {dim_y} m\n&quot;&amp;#10;    f&quot;Tamaño: {tamanyo_pulgadas}\&quot;\n&quot;&amp;#10;    f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m\n&quot; &amp;#10;    f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u\n&quot;&amp;#10;    &amp;#10;)&amp;#10;####################################################&amp;#10;#################____SETTINGS____###################&amp;#10;####################################################&amp;#10;&amp;#10;stim_3.setPhase(frecuencia_temporal,'+')&amp;#10;#stim.setPhase(0.01,'+')&amp;#10;stim_3.draw()&amp;#10;&amp;#10;#dots_no = noise_dots_no # prueba --&gt; cargar variable del csv y volcar al estimulo&amp;#10;&amp;#10;## FFT if activated&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_4.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_4.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;    &amp;#10;# START/STOP: Verifica si se ha presionado la tecla&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    pass&amp;#10;    #stim_x, stim_y = calcular_posicion_stim(periphereal_region_diameter)&amp;#10;    " valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_3.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_3.setText(`Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Posicion Angular: ${util.pad(Number.parseFloat(posicion_angular).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Diametro 9º: ${util.pad(Number.parseFloat(diametros_central_periferica[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(diametros_central_periferica[1]).toFixed(2), 1)}&amp;#10;Diametro ${excentricidad}º: ${util.pad(Number.parseFloat(diametros_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(diametros_estimulo[1]).toFixed(2), 1)}&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Frecuencia Temporal: ${util.pad(Number.parseFloat(frecuencia_temporal).toFixed(3), 1)}&amp;#10;Tamaño: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}`&amp;#10;);&amp;#10;logs_screen_specs_2.setText(`Pantalla: ${nombre_pantalla}&amp;#10;Altura pantalla: ${dim_y} m&amp;#10;Tamaño: ${tamanyo_pulgadas}&quot;&amp;#10;Distancia paciente - pantalla (eyetracker): ${distancia_eyetracker} m&amp;#10;Diametro umbral periferia-centro (normalizado): ${util.pad(Number.parseFloat(periphereal_region_diameter).toFixed(2), 1)} u`&amp;#10;);&amp;#10;stim_3.setPhase(frecuencia_temporal, &quot;+&quot;);&amp;#10;stim_3.draw();&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_4.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_4.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="periphereal_region_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="3" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="periphereal_region_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="periphereal_region_diameter" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="gaze_fixation_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="3" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_fixation_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="foveal_region_pos" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <SliderComponent name="slider_4" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="0" valType="num" updates="constant" name="granularity"/>
        <Param val="0.1" valType="code" updates="None" name="initVal"/>
        <Param val="" valType="list" updates="constant" name="labels"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="slider_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="False" valType="bool" updates="constant" name="storeRating"/>
        <Param val="False" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <GratingComponent name="stim_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="gauss" valType="file" updates="constant" name="mask"/>
        <Param val="stim_3" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="orientacion" valType="num" updates="set every repeat" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <KeyboardComponent name="key_resp_7" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_7" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <DotsComponent name="noise_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="3" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="14000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_5" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="noise_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="10" valType="num" updates="None" name="dotLife"/>
        <Param val="3" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.8,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="14000" valType="int" updates="constant" name="nDots"/>
        <Param val="noise_6" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="1" valType="num" updates="set every frame" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <PolygonComponent name="polygon_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_coordenadas_mirada_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_screen_specs_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_screen_specs_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="GP_data_adq_backend_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_2.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_2.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_4" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_3" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.7, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="DIAL_REPRESENTATION_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="DIAL_REPRESENTATION_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="DIAL*360" valType="num" updates="set every frame" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.01, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="gaze_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_11" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;5:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; 5)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="code_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="BL_3_CONTRAST">
      <RoutineSettingsComponent name="BL_3_CONTRAST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_3_CONTRAST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <GratingComponent name="stim_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$grating_mask" valType="file" updates="constant" name="mask"/>
        <Param val="stim_5" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="grating_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sqr" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <CodeComponent name="code_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim_5.sf = frecuencia_espacial;&amp;#10;stim_5.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial_5.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_5.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;####################################################&amp;#10;########____LOAD STAIRCASE TEST RESULTS____#########&amp;#10;####################################################&amp;#10;#threshold_dict = load_thresholds_from_json()&amp;#10;spatial_frequency_threshold = threshold_dict['spatial_frequency_threshold']&amp;#10;contrast_threshold = threshold_dict['contrast_threshold']&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim_5.sf = spatial_frequency_threshold&amp;#10;stim_5.contrast = contrast_threshold + contrast_threshold*offset_porcentual&amp;#10;stim_5.ori = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial_5.alignText='left'&amp;#10;logs_parametros_trial_5.anchorHoriz='left'&amp;#10;event.clearEvents()&amp;#10;&amp;#10;first_frame             = True&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;success                 = -1&amp;#10;undecided               = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_5.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_5.setText(&amp;#10;    f&quot;Prueba 3 - Contraste\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {grating_size[0]:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;&amp;#10;    f&quot;Umbral contraste cargado: {contrast_threshold:.2f}\n&quot;&amp;#10;    f&quot;Offset aplicado: {offset_porcentual}\n&quot;&amp;#10;    f&quot;Contraste mostrado: {contrast_threshold + contrast_threshold*offset_porcentual/100:.2f}&quot; &amp;#10;)&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_6.setText(&quot;La mirada está dentro de la región&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_6.setText(&quot;La mirada está fuera de la región&quot;)&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;undecided               = False&amp;#10;success                 = -1&amp;#10;&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    flag_skip_all = True&amp;#10;    &amp;#10;elif 'right' in keys and orientacion == 45: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'left' in keys and orientacion == 135: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'right' in keys or 'left' in keys: # Respuesta incorrecta&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;elif 'down' in keys: # NS/NC&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;    undecided               = True&amp;#10;&amp;#10;####################################################&amp;#10;###############____TIME &amp; NOISE____#################&amp;#10;####################################################&amp;#10;&amp;#10;if first_frame: # Ejecucion unica&amp;#10;    dots_white_7.setAutoDraw(False)&amp;#10;    dots_black_7.setAutoDraw(False)&amp;#10;    first_time = False&amp;#10;&amp;#10;if (t&gt;stim_time) or flag_answer_registered: # time exceeded OR answer registered&amp;#10;    # SHOW RESULTS IF FEEDBACK ACTIVATED&amp;#10;    if FEEDBACK:&amp;#10;        print(f&quot;El resultado es: {success}&quot;)&amp;#10;        show_feedback(feedback_txt_3, success)&amp;#10;        &amp;#10;    # SHOW NOISE&amp;#10;    stim_5.setAutoDraw(False)&amp;#10;    show_noise(dots_white_7, dots_black_7, response_time, orientacion, feedback_txt_3) #only one call&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if flag_skip_all:&amp;#10;    trials_bl_3.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_5.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_5.setText(`Prueba 3 - Contraste&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(grating_size[0]).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}&amp;#10;Contraste: ${util.pad(Number.parseFloat(contraste).toFixed(2), 1)}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_6.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_6.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_9" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_9" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_5.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_5.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_5" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_5" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="gaze_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_5" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <DotsComponent name="dots_white_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_7" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_7" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <TextComponent name="feedback_txt_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.085" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_txt_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="BL_2_COLOR">
      <RoutineSettingsComponent name="BL_2_COLOR" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_2_COLOR" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_14" plugin="None">
        <Param val="import pandas as pd&amp;#10;&amp;#10;opacidad = 1&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;function get_threshold(test_var_name, results_csv_path) {&amp;#10;    var data, n_reversals_to_average, reversal_data, threshold;&amp;#10;    data = pd.read_csv(results_csv_path);&amp;#10;    reversal_data = data[(data[&quot;reversals&quot;] &gt; 0)];&amp;#10;    n_reversals_to_average = 9;&amp;#10;    threshold = reversal_data[test_var_name].tail(n_reversals_to_average).mean();&amp;#10;    return threshold;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial_6.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_6.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;    &amp;#10;####################################################&amp;#10;########____LOAD STAIRCASE TEST RESULTS____#########&amp;#10;####################################################&amp;#10;#threshold_dict = load_thresholds_from_json()&amp;#10;frecuencia_espacial = threshold_dict['spatial_frequency_threshold']&amp;#10;saturation_threshold = threshold_dict['color_threshold'][color_name]&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;#stim_6.sf = frecuencia_espacial&amp;#10;#stim_6.orientation = orientacion&amp;#10;stim_img.ori = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial_6.alignText='left'&amp;#10;logs_parametros_trial_6.anchorHoriz='left'&amp;#10;&amp;#10;event.clearEvents()&amp;#10;&amp;#10;first_frame             = True&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;success                 = -1&amp;#10;undecided               = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_6.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_6.setText(&amp;#10;    f&quot;Prueba 2 - Color/saturación\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {grating_size[0]:.2f}\n&quot;&amp;#10;    #f&quot;Tipo: {tipo}\n&quot;&amp;#10;    f&quot;Offset (%): {umbral_porcentual:.2f}\n&quot;&amp;#10;    f&quot;Umbral color {color_name}(%): {saturation_threshold:.2f}\n&quot;&amp;#10;    f&quot;Sat. C1 (%): {color_1_s:.2f}\n&quot;&amp;#10;    f&quot;Sat. C2 (%): {color_1_s+saturation_threshold + saturation_threshold*umbral_porcentual/100:.2f}\n&quot;&amp;#10;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_7.setText(&quot;La mirada está dentro de la circunferencia&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_7.setText(&quot;La mirada está fuera de la circunferencia&quot;)&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;undecided               = False&amp;#10;success                 = -1&amp;#10;&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    flag_skip_all = True&amp;#10;    &amp;#10;elif 'right' in keys and orientacion == 45: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'left' in keys and orientacion == 135: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'right' in keys or 'left' in keys: # Respuesta incorrecta&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;elif 'down' in keys: # NS/NC&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;    undecided               = True&amp;#10;&amp;#10;####################################################&amp;#10;###############____TIME &amp; NOISE____#################&amp;#10;####################################################&amp;#10;&amp;#10;if first_frame: # Ejecucion unica&amp;#10;    dots_white_6.setAutoDraw(False)&amp;#10;    dots_black_6.setAutoDraw(False)&amp;#10;    first_time = False&amp;#10;&amp;#10;if (t&gt;stim_time) or flag_answer_registered: # time exceeded OR answer registered&amp;#10;    # SHOW RESULTS IF FEEDBACK ACTIVATED&amp;#10;    if FEEDBACK:&amp;#10;        print(f&quot;El resultado es: {success}&quot;)&amp;#10;        show_feedback(feedback_txt_2, success)&amp;#10;     # SHOW NOISE&amp;#10;    stim_img.setAutoDraw(False)&amp;#10;    show_noise(dots_white_6, dots_black_6, response_time, orientacion, feedback_txt_2) #only one call&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;if flag_skip_all:&amp;#10;    trials_bl_2.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_6.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_6.setText(`Prueba 2 - Color/saturación&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_7.setText(&quot;La mirada est\u00e1 dentro de la circunferencia&quot;);&amp;#10;} else {&amp;#10;    logs_7.setText(&quot;La mirada est\u00e1 fuera de la circunferencia&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_14" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="gabor_generator_2" plugin="None">
        <Param val="import numpy as np&amp;#10;from PIL import Image&amp;#10;import matplotlib.pyplot as plt&amp;#10;&amp;#10;&amp;#10;def save_gabor_patch_image(frequency, size, c1, c2):&amp;#10;    amp, f = generate_gabor_patch(frequency, size)&amp;#10;    &amp;#10;    # Convertir colores a numpy arrays y expandir dimensiones para el canal de transparencia&amp;#10;    c1 = np.array(c1)&amp;#10;    c2 = np.array(c2)&amp;#10;    &amp;#10;    # Calcular los valores de color para el parche&amp;#10;    im_rgb_vals = (c1 * amp[:, :, None]) + (c2 * (1 - amp[:, :, None]))&amp;#10;    &amp;#10;    # Crear el canal de alfa (transparencia): 1 donde hay el parche, 0 en el fondo&amp;#10;    alpha_channel = f&amp;#10;    &amp;#10;    # Combinar los valores RGB con el canal alfa para crear una imagen RGBA&amp;#10;    im_rgba_vals = np.dstack((im_rgb_vals, alpha_channel))&amp;#10;    &amp;#10;    # Convertir a imagen&amp;#10;    im = Image.fromarray((im_rgba_vals * 255).astype('uint8'), 'RGBA')&amp;#10;    im.save(f&quot;./images/custom_stim.png&quot;)&amp;#10;&amp;#10;def generate_gabor_patch(frequency, size):&amp;#10;    im_range = np.arange(size)&amp;#10;    x, y = np.meshgrid(im_range, im_range)&amp;#10;    dx = x - size // 2&amp;#10;    dy = y - size // 2&amp;#10;    t = np.arctan2(dy, dx)&amp;#10;    r = np.sqrt(dx ** 2 + dy ** 2)&amp;#10;    x = r * np.cos(t)&amp;#10;    y = r * np.sin(t)&amp;#10;    &amp;#10;    amp = np.where(np.cos(2 * np.pi * (x * frequency)) &gt;= 0, 1, 0)&amp;#10;    &amp;#10;    if grating_mask == 'circle':&amp;#10;        f = np.where(r &lt;= size // 2, 1, 0)&amp;#10;    elif grating_mask == 'gauss':&amp;#10;        f = np.cos((np.pi * (r + size // 2)) / (size - 1) - np.pi / 2)&amp;#10;        f[r &gt; size // 2] = 0&amp;#10;    else:&amp;#10;        f = 0&amp;#10;    &amp;#10;    return amp, f&amp;#10;    &amp;#10;def hsv_a_rgb(h, s, v):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Convierte un color desde HSV a RGB.&amp;#10;&amp;#10;    Parámetros:&amp;#10;    h (float): Matiz (Hue) en grados (0-360).&amp;#10;    s (float): Saturación (Saturation) como porcentaje (0-100).&amp;#10;    v (float): Valor (Value) como porcentaje (0-100).&amp;#10;&amp;#10;    Retorna:&amp;#10;    tuple: Una tupla con valores (R, G, B), cada uno en el rango de 0 a 255.&amp;#10;    &quot;&quot;&quot;&amp;#10;    h = h % 360&amp;#10;    s /= 100&amp;#10;    v /= 100&amp;#10;&amp;#10;    c = v * s&amp;#10;    x = c * (1 - abs((h / 60) % 2 - 1))&amp;#10;    m = v - c&amp;#10;&amp;#10;    if 0 &lt;= h &lt; 60:&amp;#10;        r, g, b = c, x, 0&amp;#10;    elif 60 &lt;= h &lt; 120:&amp;#10;        r, g, b = x, c, 0&amp;#10;    elif 120 &lt;= h &lt; 180:&amp;#10;        r, g, b = 0, c, x&amp;#10;    elif 180 &lt;= h &lt; 240:&amp;#10;        r, g, b = 0, x, c&amp;#10;    elif 240 &lt;= h &lt; 300:&amp;#10;        r, g, b = x, 0, c&amp;#10;    else:&amp;#10;        r, g, b = c, 0, x&amp;#10;&amp;#10;    r = (r + m) * 255&amp;#10;    g = (g + m) * 255&amp;#10;    b = (b + m) * 255&amp;#10;&amp;#10;    return int(round(r)), int(round(g)), int(round(b))&amp;#10;&amp;#10;&amp;#10;def normalizar_rgb(rgb):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Normaliza una tupla de valores RGB dividiendo cada componente por 255.&amp;#10;&amp;#10;    Parámetros:&amp;#10;    rgb (tuple): Una tupla con valores (R, G, B), cada uno en el rango de 0 a 255.&amp;#10;&amp;#10;    Retorna:&amp;#10;    tuple: Una tupla con valores normalizados (R, G, B), cada uno en el rango de 0 a 1.&amp;#10;    &quot;&quot;&quot;&amp;#10;    return tuple(component / 255 for component in rgb)" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;function random_frequency() {&amp;#10;    return Math.random.uniform(0.01, 0.1);&amp;#10;}&amp;#10;frequency = random_frequency();&amp;#10;size = 500;&amp;#10;c1 = [color_1_r, color_1_g, color_1_b];&amp;#10;c2 = [color_2_r, color_2_g, color_2_b];&amp;#10;save_gabor_patch_image(frequency, size, c1, c2);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="frequency = frecuencia_espacial/2000 # division para equiparar con unidades del parche de psychopy&amp;#10;&amp;#10;size = 1600&amp;#10;c1_hsv = [color_1_h,color_1_s,color_1_v] # color del excel&amp;#10;&amp;#10;c2_hsv = [color_1_h,&amp;#10;          min(100, color_1_s + saturation_threshold * umbral_porcentual / 100),# color del excel con modificacion segun umbral sin que supere el valor 100&amp;#10;          color_1_v]&amp;#10;&amp;#10;&amp;#10;#logs.text = f'freq = {frequency:.2f}\nc1 = ({c1[0]:.2f}, {c1[1]:.2f}, {c1[2]:.2f})\nc2 = ({c2[0]:.2f}, {c2[1]:.2f}, {c2[2]:.2f})'&amp;#10;# Generar el parche de Gabor&amp;#10;save_gabor_patch_image(frequency, &amp;#10;                       size, &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c1_hsv)), &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c2_hsv)))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="gabor_generator_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_10" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_10" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_5.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_5.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_10" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_6" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_6" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="gaze_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_6" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="stim_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="C:\Users\akoun\Desktop\Biocruces\siburmuin\src\begiBrainDemo\images\custom_stim.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="stim_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="grating_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <DotsComponent name="dots_white_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_6" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black_6" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_6" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <TextComponent name="feedback_txt_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.085" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_txt_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="BL_4_TEMPORAL_FREQ">
      <RoutineSettingsComponent name="BL_4_TEMPORAL_FREQ" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_4_TEMPORAL_FREQ" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_15" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="frecuencia_monitor = 60;&amp;#10;frecuencia_parpadeo = 10;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy.iohub import launchHubServer&amp;#10;&amp;#10;io = launchHubServer()&amp;#10;mouse = io.devices.mouse&amp;#10;&amp;#10;posicion_estimulo = (0,0)&amp;#10;stim_x = 0&amp;#10;stim_y = 0&amp;#10;&amp;#10;foveal_region_pos = [0,0]&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {launchHubServer} from 'psychopy/iohub';&amp;#10;io = launchHubServer();&amp;#10;mouse = io.devices.mouse;&amp;#10;posicion_estimulo = [0, 0];&amp;#10;stim_x = 0;&amp;#10;stim_y = 0;&amp;#10;foveal_region_pos = [0, 0];&amp;#10;gaze_position = mouse.getPosition();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as math from 'math';&amp;#10;import * as random from 'random';&amp;#10;function calculate_diameter(excentricity, distance_to_screen, screen_height = null) {&amp;#10;    /*&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;    -excentricity: angle of the excentricity in degrees&amp;#10;    -distance_to_screen: distance between patient and screen in meters&amp;#10;    -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns:&amp;#10;    -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;    -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    */&amp;#10;    import * as math from 'math';&amp;#10;    var diameter_m, diameter_unit;&amp;#10;    if ((screen_height === null)) {&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [null, diameter_m];&amp;#10;    } else {&amp;#10;        diameter_unit = (((2 * distance_to_screen) * Math.sin(math.radians(excentricity))) / screen_height);&amp;#10;        diameter_m = ((2 * distance_to_screen) * Math.sin(math.radians(excentricity)));&amp;#10;        return [diameter_unit, diameter_m];&amp;#10;    }&amp;#10;}&amp;#10;function calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla) {&amp;#10;    var _, diameter_unit, radius, theta;&amp;#10;    [diameter_unit, _] = calculate_diameter(excentricidad, 0.65, altura_pantalla);&amp;#10;    radius = (diameter_unit / 2);&amp;#10;    theta = math.radians(angulo_grados);&amp;#10;    stim_x = (radius * Math.cos(theta));&amp;#10;    stim_y = (radius * Math.sin(theta));&amp;#10;    return [stim_x, stim_y];&amp;#10;}&amp;#10;posicion_estimulo = [stim_x, stim_y] = calcular_posicion_stim(posicion_angular, excentricidad, dim_y);&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y);&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y);&amp;#10;stim_7.sf = frecuencia_espacial;&amp;#10;stim_7.orientation = orientacion;&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_parametros_trial_7.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_7.anchorHoriz = &quot;left&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import math&amp;#10;import random&amp;#10;&amp;#10;frecuencia_parpadeo = 30  # Hz, frecuencia de parpadeo deseada (valor inicial)&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1&amp;#10;&amp;#10;####################################################&amp;#10;########____LOAD STAIRCASE TEST RESULTS____#########&amp;#10;####################################################&amp;#10;spatial_frequency_threshold = threshold_dict['spatial_frequency_threshold']&amp;#10;flicker_threshold = threshold_dict['flicker_threshold']&amp;#10;&amp;#10;&amp;#10;####################################################&amp;#10;###############____PARAMS CONFIG____################&amp;#10;####################################################&amp;#10;posicion_estimulo = stim_x, stim_y = calcular_posicion_stim(posicion_angular, excentricidad, dim_y)&amp;#10;diametros_central_periferica = calculate_diameter(9, 0.65, dim_y)&amp;#10;diametros_estimulo = calculate_diameter(excentricidad, 0.65, dim_y)&amp;#10;&amp;#10;stim_7.sf = spatial_frequency_threshold&amp;#10;stim_7.ori = orientacion&amp;#10;&amp;#10;#other&amp;#10;gaze_position = mouse.getPosition()&amp;#10;&amp;#10;logs_parametros_trial_7.alignText='left'&amp;#10;logs_parametros_trial_7.anchorHoriz='left'&amp;#10;event.clearEvents()&amp;#10;&amp;#10;first_frame             = True&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;success                 = -1&amp;#10;undecided               = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="####################################################&amp;#10;##############____ON SCREEN LOGS____################&amp;#10;####################################################&amp;#10;gaze_position = mouse.getPosition()&amp;#10;logs_coordenadas_mirada_7.setText(f'{gaze_position[0]:.2f},{gaze_position[1]:.2f}')&amp;#10;&amp;#10;logs_parametros_trial_7.setText(&amp;#10;    f&quot;Prueba 4 - Frecuencia Temporal\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Orientación: {orientacion:.2f}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Posicion Estimulo: ({posicion_estimulo[0]:.2f}, {posicion_estimulo[1]:.2f})\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {grating_size[0]:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;&amp;#10;    f&quot;Umbral FFT cargado: {flicker_threshold:.2f}\n&quot;&amp;#10;    f&quot;Offset aplicado: {offset_porcentual}\n&quot;&amp;#10;    f&quot;Frecuencia mostrada: {flicker_threshold + flicker_threshold*offset_porcentual/100:.2f} FPS/Hz&quot;&amp;#10;)&amp;#10;&amp;#10;####################################################&amp;#10;#################_______FFT______###################&amp;#10;####################################################&amp;#10;frecuencia_deseada = flicker_threshold + flicker_threshold*offset_porcentual/100&amp;#10;if frecuencia_monitor/2 &lt; frecuencia_deseada:&amp;#10;    print(&quot;No se puede mostrar la frecuencia deseada en el monitor actual&quot;)&amp;#10;else:&amp;#10;    frames_por_ciclo = int((frecuencia_monitor / frecuencia_deseada) / 2)&amp;#10;    opacidad = 1 if (frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo else 0&amp;#10;    stim_7.opacity = opacidad&amp;#10;&amp;#10;####################################################&amp;#10;##########____GAZE VS REGION POSITION____###########&amp;#10;####################################################&amp;#10;# Calcula la distancia del ratón al centro de foveal_region&amp;#10;dist_from_center = ((gaze_position[0] - foveal_region_pos[0])**2 + (gaze_position[1] - foveal_region_pos[1])**2)**0.5&amp;#10;&amp;#10;# Comprueba si la distancia es menor que el radio de foveal_region&amp;#10;if dist_from_center &lt;= 0.25/2:#foveal_region.radius:&amp;#10;    logs_8.setText(&quot;La mirada está dentro de la región&quot;)&amp;#10;&amp;#10;else:&amp;#10;    logs_8.setText(&quot;La mirada está fuera de la región&quot;)&amp;#10;    &amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;undecided               = False&amp;#10;success                 = -1&amp;#10;&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    flag_skip_all = True&amp;#10;    &amp;#10;elif 'right' in keys and orientacion == 45: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'left' in keys and orientacion == 135: # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'right' in keys or 'left' in keys: # Respuesta incorrecta&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;elif 'down' in keys: # NS/NC&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;    undecided               = True&amp;#10;####################################################&amp;#10;###############____TIME &amp; NOISE____#################&amp;#10;####################################################&amp;#10;&amp;#10;if first_frame: # Ejecucion unica&amp;#10;    dots_white_8.setAutoDraw(False)&amp;#10;    dots_black_8.setAutoDraw(False)&amp;#10;    first_time = False&amp;#10;&amp;#10;if (t&gt;stim_time) or flag_answer_registered: # time exceeded OR answer registered&amp;#10;    # SHOW RESULTS IF FEEDBACK ACTIVATED&amp;#10;    if FEEDBACK:&amp;#10;        print(f&quot;El resultado es: {success}&quot;)&amp;#10;        show_feedback(feedback_txt_4, success)&amp;#10;        &amp;#10;    stim_7.setAutoDraw(False)&amp;#10;    show_noise(dots_white_8, dots_black_8, response_time, orientacion, feedback_txt_4) #only one call&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if flag_skip_all:&amp;#10;    trials_bl_4.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;gaze_position = mouse.getPosition();&amp;#10;logs_coordenadas_mirada_7.setText(`${util.pad(Number.parseFloat(gaze_position[0]).toFixed(2), 1)},${util.pad(Number.parseFloat(gaze_position[1]).toFixed(2), 1)}`);&amp;#10;logs_parametros_trial_7.setText(`Prueba 4 - Frecuencia Temporal&amp;#10;Intento: ${intento}&amp;#10;Orientación: ${util.pad(Number.parseFloat(orientacion).toFixed(2), 1)}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Posicion Estimulo: (${util.pad(Number.parseFloat(posicion_estimulo[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(posicion_estimulo[1]).toFixed(2), 1)})&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(grating_size[0]).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}&amp;#10;FFT: ${util.pad(Number.parseFloat(FFT).toFixed(2), 1)}`&amp;#10;);&amp;#10;/*&amp;#10;logs_screen_specs.setText(&amp;#10;f&quot;Pantalla: {nombre_pantalla}&amp;#10;&quot;&amp;#10;f&quot;Altura pantalla: {dim_y} m&amp;#10;&quot;&amp;#10;f&quot;Tamaño: {tamanyo_pulgadas}&quot;&amp;#10;&quot;&amp;#10;f&quot;Distancia paciente - pantalla (eyetracker): {distancia_eyetracker} m&amp;#10;&quot;&amp;#10;f&quot;Diametro umbral periferia-centro (normalizado): {periphereal_region_diameter:.2f} u&amp;#10;&quot;&amp;#10;&amp;#10;)*/&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / FFT) / 2));&amp;#10;opacidad = (((frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo) ? 1 : 0);&amp;#10;stim_7.opacity = opacidad;&amp;#10;dist_from_center = Math.pow((Math.pow((gaze_position[0] - foveal_region_pos[0]), 2) + Math.pow((gaze_position[1] - foveal_region_pos[1]), 2)), 0.5);&amp;#10;if ((dist_from_center &lt;= (0.25 / 2))) {&amp;#10;    logs_8.setText(&quot;La mirada est\u00e1 dentro de la regi\u00f3n&quot;);&amp;#10;} else {&amp;#10;    logs_8.setText(&quot;La mirada est\u00e1 fuera de la regi\u00f3n&quot;);&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_15" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_11" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_11" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="polygon_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="GP_data_adq_backend_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as socket from 'socket';&amp;#10;HOST = &quot;127.0.0.1&quot;;&amp;#10;PORT = 4242;&amp;#10;ADDRESS = [HOST, PORT];&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM);&amp;#10;s.connect(ADDRESS);&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_CURSOR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_POG_FIX\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DATA\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_DIAL\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;s.send(str.encode(&quot;&lt;SET ID=\&quot;ENABLE_SEND_HR\&quot; STATE=\&quot;1\&quot; /&gt;\r\n&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import socket&amp;#10;&amp;#10;# Host machine IP&amp;#10;HOST = '127.0.0.1'&amp;#10;# Gazepoint Port&amp;#10;PORT = 4242&amp;#10;ADDRESS = (HOST, PORT)&amp;#10;&amp;#10;# Connect to Gazepoint API&amp;#10;s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)&amp;#10;s.connect(ADDRESS)&amp;#10;&amp;#10;# Send commands to initialize data streaming&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_CURSOR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_POG_FIX&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DATA&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_DIAL&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;s.send(str.encode('&lt;SET ID=&quot;ENABLE_SEND_HR&quot; STATE=&quot;1&quot; /&gt;\r\n'))&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;# Receive data&amp;#10;rxdat = s.recv(1024)&amp;#10;data_r = bytes.decode(rxdat)&amp;#10;#print(data_r)&amp;#10;&amp;#10;# Parse data string&amp;#10;DIAL = 0&amp;#10;HR = 0 &amp;#10;&amp;#10;# Split data string into a list of name=&quot;value&quot; substrings&amp;#10;datalist = data_r.split(&quot; &quot;)&amp;#10;#print(datalist)&amp;#10;&amp;#10;# Iterate through list of substrings to extract data values&amp;#10;for el in datalist:&amp;#10;    if (el.find(&quot;DIAL=&quot;) != -1):&amp;#10;        print(el.split(&quot;\&quot;&quot;))&amp;#10;        DIAL = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;    if  (el.find(&quot;HR=&quot;) != -1):&amp;#10;        HR = float(el.split(&quot;\&quot;&quot;)[1])&amp;#10;&amp;#10;# Print results&amp;#10;&amp;#10;GP_logs_5.text = f'DIAL: {DIAL}, HR: {HR}'&amp;#10;#print(&quot;DIAL:&quot;, DIAL)&amp;#10;#print(&quot;HR:&quot;, HR)&amp;#10;#print(&quot;\n&quot;)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="rxdat = s.recv(1024);&amp;#10;data_r = bytes.decode(rxdat);&amp;#10;DIAL = 0;&amp;#10;HR = 0;&amp;#10;datalist = data_r.split(&quot; &quot;);&amp;#10;for (var el, _pj_c = 0, _pj_a = datalist, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    el = _pj_a[_pj_c];&amp;#10;    if ((el.find(&quot;DIAL=&quot;) !== (- 1))) {&amp;#10;        console.log(el.split(&quot;\&quot;&quot;));&amp;#10;        DIAL = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;    if ((el.find(&quot;HR=&quot;) !== (- 1))) {&amp;#10;        HR = Number.parseFloat(el.split(&quot;\&quot;&quot;)[1]);&amp;#10;    }&amp;#10;}&amp;#10;GP_logs_5.text = `DIAL: ${DIAL}, HR: ${HR}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="s.close();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="s.close()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="GP_data_adq_backend_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="logs_background_11" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(1, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="logs_background_12" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_12" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="logs_8" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_parametros_trial_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="logs_coordenadas_mirada_7" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_coordenadas_mirada_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="GP_logs_7" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="GP_logs_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="stim_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="set every repeat" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="circle" valType="file" updates="constant" name="mask"/>
        <Param val="stim_7" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.5" valType="num" updates="constant" name="phase"/>
        <Param val="(stim_x, stim_y)" valType="list" updates="set every repeat" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="1" valType="num" updates="constant" name="sf"/>
        <Param val="grating_size" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sqr" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <PolygonComponent name="gaze_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="gaze_7" valType="code" updates="None" name="name"/>
        <Param val="0.4" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="gaze_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.05, 0.05)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <DotsComponent name="dots_white_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_8" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_8" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <TextComponent name="feedback_txt_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.085" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_txt_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="gabor_trial">
      <RoutineSettingsComponent name="gabor_trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="gabor_trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_16" plugin="None">
        <Param val="import numpy as np&amp;#10;from PIL import Image&amp;#10;import matplotlib.pyplot as plt&amp;#10;&amp;#10;&amp;#10;def save_gabor_patch_image(frequency, size, c1, c2):&amp;#10;    amp, f = generate_gabor_patch(frequency, size)&amp;#10;    &amp;#10;    # Convertir colores a numpy arrays y expandir dimensiones para el canal de transparencia&amp;#10;    c1 = np.array(c1)&amp;#10;    c2 = np.array(c2)&amp;#10;    &amp;#10;    # Calcular los valores de color para el parche&amp;#10;    im_rgb_vals = (c1 * amp[:, :, None]) + (c2 * (1 - amp[:, :, None]))&amp;#10;    &amp;#10;    # Crear el canal de alfa (transparencia): 1 donde hay el parche, 0 en el fondo&amp;#10;    alpha_channel = f&amp;#10;    &amp;#10;    # Combinar los valores RGB con el canal alfa para crear una imagen RGBA&amp;#10;    im_rgba_vals = np.dstack((im_rgb_vals, alpha_channel))&amp;#10;    &amp;#10;    # Convertir a imagen&amp;#10;    im = Image.fromarray((im_rgba_vals * 255).astype('uint8'), 'RGBA')&amp;#10;    im.save(f&quot;C:/Users/akoun/Desktop/Biocruces/siburmuin/src/begiBrainDemo/images/custom_stim.png&quot;)&amp;#10;&amp;#10;def generate_gabor_patch(frequency, size):&amp;#10;    im_range = np.arange(size)&amp;#10;    x, y = np.meshgrid(im_range, im_range)&amp;#10;    dx = x - size // 2&amp;#10;    dy = y - size // 2&amp;#10;    t = np.arctan2(dy, dx)&amp;#10;    r = np.sqrt(dx ** 2 + dy ** 2)&amp;#10;    x = r * np.cos(t)&amp;#10;    y = r * np.sin(t)&amp;#10;    &amp;#10;    # Transición brusca para los colores (líneas) en el patrón Gabor&amp;#10;    amp = np.where(np.cos(2 * np.pi * (x * frequency)) &gt;= 0, 1, 0)&amp;#10;    f = np.where(r &lt;= size // 2, 1, 0)&amp;#10;    &amp;#10;    return amp, f&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as random from 'random';&amp;#10;function random_frequency() {&amp;#10;    return Math.random.uniform(0.01, 0.1);&amp;#10;}&amp;#10;frequency = random_frequency();&amp;#10;size = 500;&amp;#10;c1 = [color_1_r, color_1_g, color_1_b];&amp;#10;c2 = [color_2_r, color_2_g, color_2_b];&amp;#10;logs.text = `freq = ${util.pad(Number.parseFloat(frequency).toFixed(2), 1)}&amp;#10;c1 = (${util.pad(Number.parseFloat(c1[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c1[1]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c1[2]).toFixed(2), 1)})&amp;#10;c2 = (${util.pad(Number.parseFloat(c2[0]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c2[1]).toFixed(2), 1)}, ${util.pad(Number.parseFloat(c2[2]).toFixed(2), 1)})`&amp;#10;;&amp;#10;save_gabor_patch_image(frequency, size, c1, c2);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;&amp;#10;#def random_color():&amp;#10;#    return (random.random(), random.random(), random.random())&amp;#10;&amp;#10;def random_frequency():&amp;#10;    return random.uniform(0.01, 0.1)&amp;#10;&amp;#10;# Parámetros aleatorios&amp;#10;frequency = random_frequency()&amp;#10;size = 500&amp;#10;c1 = [color_1_r,color_1_g,color_1_b]#random_color()&amp;#10;c2 = [color_2_r,color_2_g,color_2_b]&amp;#10;&amp;#10;logs.text = f'freq = {frequency:.2f}\nc1 = ({c1[0]:.2f}, {c1[1]:.2f}, {c1[2]:.2f})\nc2 = ({c2[0]:.2f}, {c2[1]:.2f}, {c2[2]:.2f})'&amp;#10;# Generar el parche de Gabor&amp;#10;save_gabor_patch_image(frequency, size, c1, c2)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_16" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="C:\Users\akoun\Desktop\Biocruces\siburmuin\src\begiBrainDemo\images\custom_stim.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="20" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_12" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_12" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_9" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.6, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="BL_5_SEMANTIC_STIM">
      <RoutineSettingsComponent name="BL_5_SEMANTIC_STIM" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_5_SEMANTIC_STIM" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="semantic_stim" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="semantic_stim" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="tamanyo" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_13" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_13" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="logs_background_13" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_17" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="logs_parametros_trial_8.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_8.anchorHoriz = &quot;left&quot;;&amp;#10;first_frame = true;&amp;#10;flag_skip_all = false;&amp;#10;flag_answer_registered = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="logs_parametros_trial_8.alignText='left'&amp;#10;logs_parametros_trial_8.anchorHoriz='left'&amp;#10;&amp;#10;event.clearEvents()&amp;#10;&amp;#10;first_frame             = True&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;success                 = -1&amp;#10;undecided               = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="logs_parametros_trial_8.setText(&amp;#10;    f&quot;Prueba 5 - Estímulos semánticos\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;  &amp;#10;)&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;undecided               = False&amp;#10;success                 = -1&amp;#10;&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    flag_skip_all = True&amp;#10;    &amp;#10;elif 'right' in keys and respuesta == 'vivo': # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'left' in keys and respuesta == 'inerte': # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'right' in keys or 'left' in keys: # Respuesta incorrecta&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;elif 'down' in keys: # NS/NC&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;    undecided               = True&amp;#10;&amp;#10;####################################################&amp;#10;###############____TIME &amp; NOISE____#################&amp;#10;####################################################&amp;#10;&amp;#10;if first_frame: # Ejecucion unica&amp;#10;    dots_white_9.setAutoDraw(False)&amp;#10;    dots_black_9.setAutoDraw(False)&amp;#10;    first_time = False&amp;#10;&amp;#10;if (t&gt;stim_time) or flag_answer_registered: # time exceeded OR answer registered&amp;#10;    # SHOW RESULTS IF FEEDBACK ACTIVATED&amp;#10;    if FEEDBACK:&amp;#10;        print(f&quot;El resultado es: {success}&quot;)&amp;#10;        show_feedback(feedback_txt_5, success)&amp;#10;    semantic_stim.setAutoDraw(False)&amp;#10;    show_noise(dots_white_9, dots_black_9, response_time, orientacion, feedback_txt_5) #only one call&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if flag_skip_all:&amp;#10;    trials_bl_5.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;logs_parametros_trial_8.setText(`Prueba 5 - Estímulos semánticos&amp;#10;Intento: ${intento}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}`&amp;#10;);&amp;#10;flag_skip_all = false;&amp;#10;flag_answer_registered = false;&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;    flag_skip_all = true;&amp;#10;} else {&amp;#10;    if (_pj.in_es6(&quot;right&quot;, keys)) {&amp;#10;        flag_answer_registered = true;&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;left&quot;, keys)) {&amp;#10;            flag_answer_registered = true;&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(&quot;down&quot;, keys)) {&amp;#10;                flag_answer_registered = true;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if (first_frame) {&amp;#10;    dots_white_9.setAutoDraw(false);&amp;#10;    dots_black_9.setAutoDraw(false);&amp;#10;    first_time = false;&amp;#10;}&amp;#10;if (((t &gt; stim_time) || flag_answer_registered)) {&amp;#10;    stim.setAutoDraw(false);&amp;#10;    show_noise(dots_white_9, dots_black_9, response_time);&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if (flag_skip_all) {&amp;#10;    trials_bl_5.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_17" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="logs_parametros_trial_8" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="right_arrow" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="right_arrow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="90" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrow" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="left_arrow" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="left_arrow" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="-90" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrow" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="right_arrow_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="right_arrow_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.4, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ser vivo" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="left_arrow_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="left_arrow_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.4, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Inerte" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <DotsComponent name="dots_white_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_9" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_9" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <TextComponent name="feedback_txt_5" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.085" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_txt_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="CONTRAST_STAIRCASE_TEST">
      <RoutineSettingsComponent name="CONTRAST_STAIRCASE_TEST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="CONTRAST_STAIRCASE_TEST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_18" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function staircase_2down_1up(starting_value = 0.2, step_size = 0.01, stop_reversals = 10) {&amp;#10;    var contrast, correct_responses, last_direction, response, reversal_contrasts, reversals, step;&amp;#10;    contrast = starting_value;&amp;#10;    step = step_size;&amp;#10;    reversals = 0;&amp;#10;    last_direction = null;&amp;#10;    reversal_contrasts = [];&amp;#10;    correct_responses = 0;&amp;#10;    trials = [];&amp;#10;    while ((reversals &lt; stop_reversals)) {&amp;#10;        response = (np.random.rand() &lt; 0.7);&amp;#10;        if (response) {&amp;#10;            correct_responses += 1;&amp;#10;            if ((correct_responses === 2)) {&amp;#10;                correct_responses = 0;&amp;#10;                contrast = Math.max(0, (contrast - step));&amp;#10;                if ((last_direction === &quot;up&quot;)) {&amp;#10;                    reversals += 1;&amp;#10;                    reversal_contrasts.push(contrast);&amp;#10;                }&amp;#10;                last_direction = &quot;down&quot;;&amp;#10;            }&amp;#10;        } else {&amp;#10;            contrast += step;&amp;#10;            correct_responses = 0;&amp;#10;            if ((last_direction === &quot;down&quot;)) {&amp;#10;                reversals += 1;&amp;#10;                reversal_contrasts.push(contrast);&amp;#10;            }&amp;#10;            last_direction = &quot;up&quot;;&amp;#10;        }&amp;#10;        trials.push({&quot;trial&quot;: (trials.length + 1), &quot;contrast&quot;: contrast, &quot;response&quot;: response, &quot;reversals&quot;: reversals});&amp;#10;    }&amp;#10;    threshold = np.mean(reversal_contrasts.slice((- (stop_reversals - 1))));&amp;#10;    return [threshold, trials];&amp;#10;}&amp;#10;[threshold, trials] = staircase_2down_1up();&amp;#10;console.log(`Umbral estimado de contraste: ${threshold}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import csv&amp;#10;&amp;#10;# Variables estaticas&amp;#10;contrast_starting_value = 0.4#0.05&amp;#10;contrast_step_size = 0.05&amp;#10;&amp;#10;# Inicializacion de variables que posteriormente cambian&amp;#10;contrast = contrast_starting_value&amp;#10;staircase_test_orientation = get_random_orientation()&amp;#10;step = contrast_step_size&amp;#10;reversals = 0&amp;#10;last_direction = None&amp;#10;reversal_contrasts = []&amp;#10;correct_responses = 0&amp;#10;trials = []&amp;#10;&amp;#10;# Para almacenar las respuestas del participante&amp;#10;response = None&amp;#10;&amp;#10;grating.contrast = contrast&amp;#10;grating.ori = staircase_test_orientation&amp;#10;&amp;#10;# Cargar frecuencia espacial del test si se ha seleccionado la opcion&amp;#10;&amp;#10;if general_config[&quot;pretest_standard_values&quot;]:&amp;#10;    _threshold_dict = load_thresholds_from_json(filename=f&quot;./data/standard_thresholds.json&quot;) # archivo con configuracion generica&amp;#10;    spatial_frequency = _threshold_dict['spatial_frequency_threshold']&amp;#10;    threshold_dict = load_thresholds_from_json() # archivo de usuario&amp;#10;    print(f&quot;Se ha establecido la frecuencia espacial DEFAULT del estímulo a un valor de {spatial_frequency} unidades.&quot;)&amp;#10;&amp;#10;else:&amp;#10;    threshold_dict = load_thresholds_from_json() # archivo de usuario&amp;#10;    spatial_frequency = threshold_dict['spatial_frequency_threshold']&amp;#10;    print(f&quot;Se ha establecido la frecuencia espacial del estímulo a un valor de {spatial_frequency} unidades.&quot;)&amp;#10;&amp;#10;grating.sf = spatial_frequency&amp;#10;    &amp;#10;dots_white.setAutoDraw(False)&amp;#10;dots_black.setAutoDraw(False)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if 's' in keys: # El paciente ve el estimulo&amp;#10;    response = True&amp;#10;elif 'n' in keys: # El paciente no ve las lineas&amp;#10;    response = False&amp;#10;elif 'right' in keys and staircase_test_orientation == 45: # Acierto&amp;#10;    response = True&amp;#10;elif 'left' in keys and staircase_test_orientation == 135: # Acierto&amp;#10;    response = True&amp;#10;elif 'right' in keys or 'left' in keys:&amp;#10;    response = False&amp;#10;&amp;#10;# Lógica del staircase&amp;#10;if response is not None:&amp;#10;    if response:  # Respuesta correcta: el paciente ve el estimulo&amp;#10;        correct_responses += 1&amp;#10;        if correct_responses == 2:  # Después de 2 respuestas correctas consecutivas&amp;#10;            correct_responses = 0&amp;#10;            contrast = max(0, contrast - step)  # Disminuir el contraste&amp;#10;            last_direction = &quot;down&quot;&amp;#10;    else:  # Respuesta incorrecta: el paciente no ve el estimulo&amp;#10;        contrast += step  # Aumentar el contraste&amp;#10;        correct_responses = 0&amp;#10;        if last_direction == &quot;down&quot;:&amp;#10;            reversals += 1&amp;#10;            reversal_contrasts.append(contrast)&amp;#10;            &amp;#10;            if (reversals % 3 == 0) and reversals != 0:&amp;#10;                step = step/2&amp;#10;                print(f&quot;Reversals = {reversals}; New step = {step}&quot;)&amp;#10;                last_direction = &quot;up&quot;&amp;#10;            else:&amp;#10;                print('Reversal detected ({reversals})')&amp;#10;        last_direction = &quot;up&quot;&amp;#10;        &amp;#10;    grating.setAutoDraw(False)&amp;#10;    show_noise(dots_white, dots_black, staircase_noise_duration)&amp;#10;    grating.setAutoDraw(True)&amp;#10;    # Actualizar el contraste del estímulo&amp;#10;    grating.contrast = contrast&amp;#10;    staircase_test_orientation = get_random_orientation()&amp;#10;    grating.ori = staircase_test_orientation&amp;#10;    &amp;#10;    # Registrar la información del ensayo&amp;#10;    trials.append({&amp;#10;        'trial': len(trials) + 1,&amp;#10;        'contrast': contrast,&amp;#10;        'response': response,&amp;#10;        'reversals': reversals&amp;#10;    })&amp;#10;    &amp;#10;    # Restablecer la respuesta para el siguiente ensayo&amp;#10;    response = None&amp;#10;&amp;#10;    # Regla de detencion&amp;#10;    if reversals &gt;= stop_reversals:&amp;#10;        print(trials)&amp;#10;        # almaceno trials en 'data' para su posterior analisis&amp;#10;        staircase_data_filename = f&quot;./data/{expInfo['participant']}/contrast_staircase_data_{expInfo['participant']}.csv&quot;&amp;#10;        with open(staircase_data_filename, mode='w', newline='') as file:&amp;#10;            writer = csv.DictWriter(file, fieldnames=['trial', 'contrast', 'response', 'reversals'])&amp;#10;            writer.writeheader()&amp;#10;            writer.writerows(trials)&amp;#10;        &amp;#10;        # Actualizar y almacenar el diccionario de thresholds&amp;#10;        test_contrast = get_threshold('contrast', staircase_data_filename)&amp;#10;        print(f&quot;Contrast Threshold for patient: {test_contrast}&quot;)&amp;#10;        threshold_dict['contrast_threshold'] = test_contrast&amp;#10;        save_thresholds_to_json(threshold_dict)&amp;#10;        &amp;#10;        dots_white.setAutoDraw(False)&amp;#10;        dots_black.setAutoDraw(False)    &amp;#10;        continueRoutine = False&amp;#10;&amp;#10;#########################################################&amp;#10;#############____________LOGS_________###################&amp;#10;#########################################################&amp;#10;if general_config[&quot;logs&quot;]:&amp;#10;    logs_10.text = f&quot;Step Size = {step}&quot;&amp;#10;else:&amp;#10;    logs_10.setAutoDraw(False)&amp;#10;    &amp;#10;dots_white.setAutoDraw(False)&amp;#10;dots_black.setAutoDraw(False)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="contrast_pos = slider.value;&amp;#10;if (((opacity_pos !== null) &amp;&amp; (contrast_pos !== null))) {&amp;#10;    logs.text = `contrast = ${util.pad(Number.parseFloat(contrast_pos).toFixed(1), 1)}`;&amp;#10;    grating.contrast = contrast_pos;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_18" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_14" plugin="None">
        <Param val="'s','n','right','left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_14" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_10" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="grating" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$grating_mask" valType="file" updates="constant" name="mask"/>
        <Param val="grating" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="grating_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <DotsComponent name="dots_white" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <KeyboardComponent name="key_resp_20" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_20" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="COLOR_STAIRCASE_TEST">
      <RoutineSettingsComponent name="COLOR_STAIRCASE_TEST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="COLOR_STAIRCASE_TEST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_19" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function staircase_2down_1up(starting_value = 0.2, step_size = 0.01, stop_reversals = 10) {&amp;#10;    var contrast, correct_responses, last_direction, response, reversal_contrasts, reversals, step;&amp;#10;    contrast = starting_value;&amp;#10;    step = step_size;&amp;#10;    reversals = 0;&amp;#10;    last_direction = null;&amp;#10;    reversal_contrasts = [];&amp;#10;    correct_responses = 0;&amp;#10;    trials = [];&amp;#10;    while ((reversals &lt; stop_reversals)) {&amp;#10;        response = (np.random.rand() &lt; 0.7);&amp;#10;        if (response) {&amp;#10;            correct_responses += 1;&amp;#10;            if ((correct_responses === 2)) {&amp;#10;                correct_responses = 0;&amp;#10;                contrast = Math.max(0, (contrast - step));&amp;#10;                if ((last_direction === &quot;up&quot;)) {&amp;#10;                    reversals += 1;&amp;#10;                    reversal_contrasts.push(contrast);&amp;#10;                }&amp;#10;                last_direction = &quot;down&quot;;&amp;#10;            }&amp;#10;        } else {&amp;#10;            contrast += step;&amp;#10;            correct_responses = 0;&amp;#10;            if ((last_direction === &quot;down&quot;)) {&amp;#10;                reversals += 1;&amp;#10;                reversal_contrasts.push(contrast);&amp;#10;            }&amp;#10;            last_direction = &quot;up&quot;;&amp;#10;        }&amp;#10;        trials.push({&quot;trial&quot;: (trials.length + 1), &quot;contrast&quot;: contrast, &quot;response&quot;: response, &quot;reversals&quot;: reversals});&amp;#10;    }&amp;#10;    threshold = np.mean(reversal_contrasts.slice((- (stop_reversals - 1))));&amp;#10;    return [threshold, trials];&amp;#10;}&amp;#10;[threshold, trials] = staircase_2down_1up();&amp;#10;console.log(`Umbral estimado de contraste: ${threshold}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import csv&amp;#10;# Variables estaticas&amp;#10;saturation_starting_value = 55&amp;#10;saturation_step_size = 5&amp;#10;staircase_test_orientation = get_random_orientation()&amp;#10;&amp;#10;# Inicializacion de variables que posteriormente cambian&amp;#10;saturation = saturation_starting_value&amp;#10;step = saturation_step_size&amp;#10;reversals = 0&amp;#10;last_direction = None&amp;#10;reversal_saturations = []&amp;#10;correct_responses = 0&amp;#10;trials = []&amp;#10;&amp;#10;# Para almacenar las respuestas del participante&amp;#10;response = None&amp;#10;&amp;#10;dots_white_2.setAutoDraw(False)&amp;#10;dots_black_2.setAutoDraw(False)&amp;#10;&amp;#10;# Tipo de test&amp;#10;if color_saturation_type == 'low':&amp;#10;    static_saturation = 0&amp;#10;    saturation_starting_value = 15&amp;#10;elif color_saturation_type == 'high':&amp;#10;    static_saturation = 70&amp;#10;    saturation_starting_value = 100&amp;#10;elif color_saturation_type == 'medium':&amp;#10;    static_saturation = 50&amp;#10;    saturation_starting_value = 70&amp;#10;else:&amp;#10;    print(&quot;No se ha especificado un tipo de saturación a medir&quot;)&amp;#10;    static_saturation = 0&amp;#10;    saturation_starting_value = 0&amp;#10;&amp;#10;saturation = saturation_starting_value&amp;#10;&amp;#10;&amp;#10;# Inicializacion de variables&amp;#10;&amp;#10;threshold_dict = load_thresholds_from_json() # archivo de usuario&amp;#10;print(f&quot;SE HA CARGADO THRESHOLD DICT EN COLOR: {threshold_dict}&quot;)&amp;#10;&amp;#10;if general_config[&quot;pretest_standard_values&quot;]:&amp;#10;    _threshold_dict = load_thresholds_from_json(filename=f&quot;./data/standard_thresholds.json&quot;) # archivo con configuracion generica&amp;#10;    spatial_frequency = _threshold_dict['spatial_frequency_threshold']&amp;#10;    print(f&quot;Se ha establecido la frecuencia espacial DEFAULT del estímulo a un valor de {spatial_frequency} unidades.&quot;)&amp;#10;&amp;#10;else:&amp;#10;    spatial_frequency = threshold_dict['spatial_frequency_threshold']&amp;#10;    print(f&quot;Se ha establecido la frecuencia espacial del estímulo a un valor de {spatial_frequency} unidades.&quot;)&amp;#10;&amp;#10;&amp;#10;if 'color_threshold' not in threshold_dict:&amp;#10;    threshold_dict['color_threshold'] = {}&amp;#10;&amp;#10;&amp;#10;frequency = spatial_frequency/500 # division para equiparar con psychopy&amp;#10;size = 400&amp;#10;c1_hsv = (color_h, static_saturation, color_v) # From XLS&amp;#10;c2_hsv = (color_h, saturation, color_v)&amp;#10;print(f&quot;Testing color: {color_name}&quot;)&amp;#10;&amp;#10;image_2.ori = staircase_test_orientation&amp;#10;&amp;#10;# Generar el parche de Gabor&amp;#10;save_gabor_patch_image(frequency, &amp;#10;                       size, &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c1_hsv)), &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c2_hsv)))" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if 's' in keys: # El paciente ve el estimulo&amp;#10;    response = True&amp;#10;elif 'n' in keys: # El paciente no ve las lineas&amp;#10;    response = False&amp;#10;elif 'right' in keys and staircase_test_orientation == 45: # Acierto&amp;#10;    response = True&amp;#10;elif 'left' in keys and staircase_test_orientation == 135: # Acierto&amp;#10;    response = True&amp;#10;elif 'right' in keys or 'left' in keys:&amp;#10;    response = False&amp;#10;&amp;#10;# Lógica del staircase&amp;#10;if response is not None:&amp;#10;    if response:  # Respuesta correcta: el paciente ve el estimulo&amp;#10;        correct_responses += 1&amp;#10;        if correct_responses == 2:  # Después de 2 respuestas correctas consecutivas&amp;#10;            correct_responses = 0&amp;#10;            saturation = max(0, saturation - step)&amp;#10;            if saturation &lt; static_saturation:&amp;#10;                # si pasa esto, el test se pasa de rosca. Hay que limitar el valor.&amp;#10;                saturation = static_saturation&amp;#10;            last_direction = &quot;down&quot;&amp;#10;    else:  # Respuesta incorrecta: el paciente no ve el estimulo&amp;#10;        saturation += step  # Aumentar el contraste&amp;#10;        if saturation &gt; 100: # Limitar maximo para que no se pase de rosca&amp;#10;            saturation = 100&amp;#10;        correct_responses = 0&amp;#10;        if last_direction == &quot;down&quot;:&amp;#10;            reversals += 1&amp;#10;            reversal_saturations.append(saturation)&amp;#10;            # Regla para aumentar la granularidad del test&amp;#10;            if (reversals % 2 == 0) and reversals != 0:&amp;#10;                step = step/2&amp;#10;                print(f&quot;Reversals = {reversals}; New step = {step}&quot;)&amp;#10;                last_direction = &quot;up&quot;&amp;#10;            else:&amp;#10;                print(f'Reversal detected ({reversals})')&amp;#10;        last_direction = &quot;up&quot;&amp;#10;       &amp;#10;    image_2.setAutoDraw(False)&amp;#10;    show_noise(dots_white_2, dots_black_2, staircase_noise_duration)&amp;#10;    image_2.setAutoDraw(True)&amp;#10;    &amp;#10;    # Actualizar el color y rotacion del estímulo&amp;#10;    staircase_test_orientation = get_random_orientation()&amp;#10;    image_2.ori = staircase_test_orientation&amp;#10;    c2_hsv = (color_h, saturation, color_v)&amp;#10;    print(f&quot;Color 1: {c1_hsv}\nColor 2: {c2_hsv}\n&quot;)&amp;#10;&amp;#10;#logs.text = f'freq = {frequency:.2f}\nc1 = ({c1[0]:.2f}, {c1[1]:.2f}, {c1[2]:.2f})\nc2 = ({c2[0]:.2f}, {c2[1]:.2f}, {c2[2]:.2f})'&amp;#10;# Generar el parche de Gabor&amp;#10;&amp;#10;    save_gabor_patch_image(frequency, &amp;#10;                       size, &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c1_hsv)), &amp;#10;                       normalizar_rgb(hsv_a_rgb(*c2_hsv)))&amp;#10;    &amp;#10;    # Registrar la información del ensayo&amp;#10;    trials.append({&amp;#10;        'trial': len(trials) + 1,&amp;#10;        'saturation': saturation,&amp;#10;        'response': response,&amp;#10;        'reversals': reversals&amp;#10;    })&amp;#10;    &amp;#10;    # Restablecer la respuesta para el siguiente ensayo&amp;#10;    response = None&amp;#10;        &amp;#10;    # Regla de detencion&amp;#10;    if reversals &gt;= stop_reversals:&amp;#10;        print(trials)&amp;#10;        # almaceno trials en 'data' para su posterior analisis&amp;#10;        staircase_data_filename = f&quot;./data/{expInfo['participant']}/saturation_staircase_data_{expInfo['participant']}_{color_name}.csv&quot;#_{color_saturation_type}.csv&quot;&amp;#10;        with open(staircase_data_filename, mode='w', newline='') as file:&amp;#10;            writer = csv.DictWriter(file, fieldnames=['trial', 'saturation', 'response', 'reversals'])&amp;#10;            writer.writeheader()&amp;#10;            writer.writerows(trials)&amp;#10;        &amp;#10;        # Actualizar y almacenar el diccionario de thresholds&amp;#10;        test_saturation = get_threshold('saturation', staircase_data_filename)&amp;#10;        print(f&quot;Saturation Threshold for patient: {test_saturation}&quot;)&amp;#10;        threshold_dict['color_threshold'][color_name] = test_saturation-static_saturation&amp;#10;        save_thresholds_to_json(threshold_dict)&amp;#10;        &amp;#10;        &amp;#10;        continueRoutine = False&amp;#10;&amp;#10;    dots_white_2.setAutoDraw(False)&amp;#10;    dots_black_2.setAutoDraw(False)&amp;#10;    &amp;#10;#########################################################&amp;#10;#############____________LOGS_________###################&amp;#10;#########################################################&amp;#10;if general_config[&quot;logs&quot;]:&amp;#10;    logs_11.text = f&quot;Step Size = {step}&quot;&amp;#10;else:&amp;#10;    logs_11.setAutoDraw(False)&amp;#10;&amp;#10;dots_white_2.setAutoDraw(False)&amp;#10;dots_black_2.setAutoDraw(False)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="contrast_pos = slider.value;&amp;#10;if (((opacity_pos !== null) &amp;&amp; (contrast_pos !== null))) {&amp;#10;    logs.text = `contrast = ${util.pad(Number.parseFloat(contrast_pos).toFixed(1), 1)}`;&amp;#10;    grating.contrast = contrast_pos;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_19" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_15" plugin="None">
        <Param val="'s','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_15" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_11" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="gabor_generator" plugin="None">
        <Param val="import numpy as np&amp;#10;from PIL import Image&amp;#10;import matplotlib.pyplot as plt&amp;#10;&amp;#10;&amp;#10;def save_gabor_patch_image(frequency, size, c1, c2):&amp;#10;    amp, f = generate_gabor_patch(frequency, size)&amp;#10;    &amp;#10;    # Convertir colores a numpy arrays y expandir dimensiones para el canal de transparencia&amp;#10;    c1 = np.array(c1)&amp;#10;    c2 = np.array(c2)&amp;#10;    &amp;#10;    # Calcular los valores de color para el parche&amp;#10;    im_rgb_vals = (c1 * amp[:, :, None]) + (c2 * (1 - amp[:, :, None]))&amp;#10;    &amp;#10;    # Crear el canal de alfa (transparencia): 1 donde hay el parche, 0 en el fondo&amp;#10;    alpha_channel = f&amp;#10;    &amp;#10;    # Combinar los valores RGB con el canal alfa para crear una imagen RGBA&amp;#10;    im_rgba_vals = np.dstack((im_rgb_vals, alpha_channel))&amp;#10;    &amp;#10;    # Convertir a imagen&amp;#10;    im = Image.fromarray((im_rgba_vals * 255).astype('uint8'), 'RGBA')&amp;#10;    im.save(f&quot;./images/custom_stim.png&quot;)&amp;#10;&amp;#10;def generate_gabor_patch(frequency, size):&amp;#10;    im_range = np.arange(size)&amp;#10;    x, y = np.meshgrid(im_range, im_range)&amp;#10;    dx = x - size // 2&amp;#10;    dy = y - size // 2&amp;#10;    t = np.arctan2(dy, dx)&amp;#10;    r = np.sqrt(dx ** 2 + dy ** 2)&amp;#10;    x = r * np.cos(t)&amp;#10;    y = r * np.sin(t)&amp;#10;    &amp;#10;    amp = np.where(np.cos(2 * np.pi * (x * frequency)) &gt;= 0, 1, 0)&amp;#10;    &amp;#10;    if grating_mask == 'circle':&amp;#10;        f = np.where(r &lt;= size // 2, 1, 0)&amp;#10;    elif grating_mask == 'gauss':&amp;#10;        f = np.cos((np.pi * (r + size // 2)) / (size - 1) - np.pi / 2)&amp;#10;        f[r &gt; size // 2] = 0&amp;#10;    else:&amp;#10;        f = 0&amp;#10;    &amp;#10;    return amp, f&amp;#10;    &amp;#10;def hsv_a_rgb(h, s, v):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Convierte un color desde HSV a RGB.&amp;#10;&amp;#10;    Parámetros:&amp;#10;    h (float): Matiz (Hue) en grados (0-360).&amp;#10;    s (float): Saturación (Saturation) como porcentaje (0-100).&amp;#10;    v (float): Valor (Value) como porcentaje (0-100).&amp;#10;&amp;#10;    Retorna:&amp;#10;    tuple: Una tupla con valores (R, G, B), cada uno en el rango de 0 a 255.&amp;#10;    &quot;&quot;&quot;&amp;#10;    h = h % 360&amp;#10;    s /= 100&amp;#10;    v /= 100&amp;#10;&amp;#10;    c = v * s&amp;#10;    x = c * (1 - abs((h / 60) % 2 - 1))&amp;#10;    m = v - c&amp;#10;&amp;#10;    if 0 &lt;= h &lt; 60:&amp;#10;        r, g, b = c, x, 0&amp;#10;    elif 60 &lt;= h &lt; 120:&amp;#10;        r, g, b = x, c, 0&amp;#10;    elif 120 &lt;= h &lt; 180:&amp;#10;        r, g, b = 0, c, x&amp;#10;    elif 180 &lt;= h &lt; 240:&amp;#10;        r, g, b = 0, x, c&amp;#10;    elif 240 &lt;= h &lt; 300:&amp;#10;        r, g, b = x, 0, c&amp;#10;    else:&amp;#10;        r, g, b = c, 0, x&amp;#10;&amp;#10;    r = (r + m) * 255&amp;#10;    g = (g + m) * 255&amp;#10;    b = (b + m) * 255&amp;#10;&amp;#10;    return int(round(r)), int(round(g)), int(round(b))&amp;#10;&amp;#10;&amp;#10;def normalizar_rgb(rgb):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Normaliza una tupla de valores RGB dividiendo cada componente por 255.&amp;#10;&amp;#10;    Parámetros:&amp;#10;    rgb (tuple): Una tupla con valores (R, G, B), cada uno en el rango de 0 a 255.&amp;#10;&amp;#10;    Retorna:&amp;#10;    tuple: Una tupla con valores normalizados (R, G, B), cada uno en el rango de 0 a 1.&amp;#10;    &quot;&quot;&quot;&amp;#10;    return tuple(component / 255 for component in rgb)" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="gabor_generator" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="image_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val=".\images\custom_stim.png" valType="file" updates="set every frame" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="grating_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <DotsComponent name="dots_white_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_2" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_2" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <KeyboardComponent name="key_resp_21" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_21" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="SPATIAL_FREQ_STAIRCASE_TEST">
      <RoutineSettingsComponent name="SPATIAL_FREQ_STAIRCASE_TEST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="SPATIAL_FREQ_STAIRCASE_TEST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <GratingComponent name="grating_7" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$grating_mask" valType="file" updates="constant" name="mask"/>
        <Param val="grating_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="grating_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <DotsComponent name="dots_black_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_3" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_white_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_3" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <CodeComponent name="code_20" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import random&amp;#10;&amp;#10;def get_random_orientation():&amp;#10;    return random.choice([45, 135])" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function staircase_2down_1up(starting_value = 0.2, step_size = 0.01, stop_reversals = 10) {&amp;#10;    var contrast, correct_responses, last_direction, response, reversal_contrasts, reversals, step;&amp;#10;    contrast = starting_value;&amp;#10;    step = step_size;&amp;#10;    reversals = 0;&amp;#10;    last_direction = null;&amp;#10;    reversal_contrasts = [];&amp;#10;    correct_responses = 0;&amp;#10;    trials = [];&amp;#10;    while ((reversals &lt; stop_reversals)) {&amp;#10;        response = (np.random.rand() &lt; 0.7);&amp;#10;        if (response) {&amp;#10;            correct_responses += 1;&amp;#10;            if ((correct_responses === 2)) {&amp;#10;                correct_responses = 0;&amp;#10;                contrast = Math.max(0, (contrast - step));&amp;#10;                if ((last_direction === &quot;up&quot;)) {&amp;#10;                    reversals += 1;&amp;#10;                    reversal_contrasts.push(contrast);&amp;#10;                }&amp;#10;                last_direction = &quot;down&quot;;&amp;#10;            }&amp;#10;        } else {&amp;#10;            contrast += step;&amp;#10;            correct_responses = 0;&amp;#10;            if ((last_direction === &quot;down&quot;)) {&amp;#10;                reversals += 1;&amp;#10;                reversal_contrasts.push(contrast);&amp;#10;            }&amp;#10;            last_direction = &quot;up&quot;;&amp;#10;        }&amp;#10;        trials.push({&quot;trial&quot;: (trials.length + 1), &quot;contrast&quot;: contrast, &quot;response&quot;: response, &quot;reversals&quot;: reversals});&amp;#10;    }&amp;#10;    threshold = np.mean(reversal_contrasts.slice((- (stop_reversals - 1))));&amp;#10;    return [threshold, trials];&amp;#10;}&amp;#10;[threshold, trials] = staircase_2down_1up();&amp;#10;console.log(`Umbral estimado de contraste: ${threshold}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import csv&amp;#10;&amp;#10;# Variables estaticas&amp;#10;sf_starting_value = 50&amp;#10;sf_step_size = 15&amp;#10;sf_starting_orientation = get_random_orientation()&amp;#10;&amp;#10;&amp;#10;# Inicializacion de variables que posteriormente cambian&amp;#10;sf = sf_starting_value&amp;#10;step = sf_step_size&amp;#10;staircase_test_orientation = sf_starting_orientation&amp;#10;reversals = 0&amp;#10;last_direction = None&amp;#10;reversal_sf = []&amp;#10;correct_responses = 0&amp;#10;trials = []&amp;#10;&amp;#10;# Para almacenar las respuestas del participante&amp;#10;response = None&amp;#10;&amp;#10;# Acciones inicio de rutina&amp;#10;grating_7.sf = sf&amp;#10;grating_7.ori = staircase_test_orientation&amp;#10;&amp;#10;dots_white_3.setAutoDraw(False)&amp;#10;dots_black_3.setAutoDraw(False)&amp;#10;&amp;#10;#threshold_dict = load_thresholds_from_json()     #cargar diccionario&amp;#10;threshold_dict = {}&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if 's' in keys: # El paciente ve el estimulo&amp;#10;    response = True&amp;#10;elif 'n' in keys: # El paciente no ve las lineas&amp;#10;    response = False&amp;#10;elif 'right' in keys and staircase_test_orientation == 45: # Acierto&amp;#10;    response = True&amp;#10;elif 'left' in keys and staircase_test_orientation == 135: # Acierto&amp;#10;    response = True&amp;#10;elif 'right' in keys or 'left' in keys:&amp;#10;    response = False&amp;#10;&amp;#10;# Lógica del staircase&amp;#10;if response is not None:&amp;#10;    if response:  # Respuesta correcta: el paciente ve las lineas del estimulo&amp;#10;        correct_responses += 1&amp;#10;        if correct_responses == 2:  # Después de 2 respuestas correctas consecutivas&amp;#10;            correct_responses = 0&amp;#10;            sf = max(0, sf + step)  # Aumentar las lineas&amp;#10;            last_direction = &quot;down&quot;&amp;#10;    else: &amp;#10;        sf = sf - step&amp;#10;        correct_responses = 0&amp;#10;        if last_direction == &quot;down&quot;:&amp;#10;            reversals += 1&amp;#10;            reversal_sf.append(sf)&amp;#10;            # Regla para aumentar la granularidad del test&amp;#10;            if (reversals % 3 == 0) and reversals != 0:&amp;#10;                step = step/2&amp;#10;                print(f&quot;Reversals = {reversals}; New step = {step}&quot;)&amp;#10;                last_direction = &quot;up&quot;&amp;#10;            else:&amp;#10;                print(f'Reversal detected ({reversals})')&amp;#10;        last_direction = &quot;up&quot;&amp;#10;        &amp;#10;    grating_7.setAutoDraw(False)&amp;#10;    show_noise(dots_white_3, dots_black_3, staircase_noise_duration)&amp;#10;    grating_7.setAutoDraw(True)&amp;#10;    &amp;#10;    # Actualizar el sf y orientacion del estímulo&amp;#10;    grating_7.sf = sf&amp;#10;    staircase_test_orientation = get_random_orientation()&amp;#10;    grating_7.ori = staircase_test_orientation&amp;#10;&amp;#10;    &amp;#10;    # Registrar la información del ensayo&amp;#10;    trials.append({&amp;#10;        'trial': len(trials) + 1,&amp;#10;        'spatial_frequency': sf,&amp;#10;        'response': response,&amp;#10;        'reversals': reversals&amp;#10;    })&amp;#10;    &amp;#10;    # Restablecer la respuesta para el siguiente ensayo&amp;#10;    response = None&amp;#10;        &amp;#10;    # Regla de detencion&amp;#10;    if reversals &gt;= stop_reversals:&amp;#10;        print(trials)&amp;#10;        &amp;#10;        # almaceno trials en 'data' para su posterior analisis (CSV)&amp;#10;        staircase_data_filename = f&quot;./data/{expInfo['participant']}/sf_staircase_data_{expInfo['participant']}.csv&quot;&amp;#10;&amp;#10;        with open(staircase_data_filename, mode='w', newline='') as file:&amp;#10;            writer = csv.DictWriter(file, fieldnames=['trial', 'spatial_frequency', 'response', 'reversals'])&amp;#10;            writer.writeheader()&amp;#10;            writer.writerows(trials)&amp;#10;        &amp;#10;        # Actualizar y almacenar el diccionario de thresholds&amp;#10;        test_sf = get_threshold('spatial_frequency', staircase_data_filename)&amp;#10;        print(f&quot;Spatial Frequency Threshold for patient: {test_sf}&quot;)&amp;#10;        threshold_dict['spatial_frequency_threshold'] = test_sf&amp;#10;        save_thresholds_to_json(threshold_dict)&amp;#10;        &amp;#10;        continueRoutine = False&amp;#10;&amp;#10;#########################################################&amp;#10;#############____________LOGS_________###################&amp;#10;#########################################################&amp;#10;if general_config[&quot;logs&quot;]:&amp;#10;    logs_12.text = f&quot;Step Size = {step}&quot;&amp;#10;else:&amp;#10;    logs_12.setAutoDraw(False)&amp;#10;    &amp;#10;dots_white_3.setAutoDraw(False)&amp;#10;dots_black_3.setAutoDraw(False)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="contrast_pos = slider.value;&amp;#10;if (((opacity_pos !== null) &amp;&amp; (contrast_pos !== null))) {&amp;#10;    logs.text = `contrast = ${util.pad(Number.parseFloat(contrast_pos).toFixed(1), 1)}`;&amp;#10;    grating.contrast = contrast_pos;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_20" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_16" plugin="None">
        <Param val="'s','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_16" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_12" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_12" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_19" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_19" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="FFT_STAIRCASE_TEST">
      <RoutineSettingsComponent name="FFT_STAIRCASE_TEST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="FFT_STAIRCASE_TEST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="flicker_daemon" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="frecuencia_monitor = 144;&amp;#10;frecuencia_parpadeo = 30;&amp;#10;frames_por_ciclo = Number.parseInt(((frecuencia_monitor / frecuencia_parpadeo) / 2));&amp;#10;opacidad = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="frecuencia_monitor = 144&amp;#10;frecuencia_parpadeo = 30  # Hz, frecuencia de parpadeo deseada (valor inicial)&amp;#10;frames_por_ciclo = int((frecuencia_monitor / frecuencia_parpadeo) / 2)&amp;#10;opacidad = 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if fft is not None:&amp;#10;    frames_por_ciclo = int((frecuencia_monitor / fft) / 2)&amp;#10;    opacidad = 1 if (frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo else 0&amp;#10;else:&amp;#10;    opacidad = 1&amp;#10;&amp;#10;grating_8.opacity = opacidad" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((fft !== null)) {&amp;#10;    frames_por_ciclo = Number.parseInt(((frecuencia_monitor / fft) / 2));&amp;#10;    opacidad = (((frameN % (2 * frames_por_ciclo)) &lt; frames_por_ciclo) ? 1 : 0);&amp;#10;} else {&amp;#10;    opacidad = 1;&amp;#10;}&amp;#10;grating_8.opacity = opacidad;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="flicker_daemon" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_21" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function staircase_2down_1up(starting_value = 0.2, step_size = 0.01, stop_reversals = 10) {&amp;#10;    var contrast, correct_responses, last_direction, response, reversal_contrasts, reversals, step;&amp;#10;    contrast = starting_value;&amp;#10;    step = step_size;&amp;#10;    reversals = 0;&amp;#10;    last_direction = null;&amp;#10;    reversal_contrasts = [];&amp;#10;    correct_responses = 0;&amp;#10;    trials = [];&amp;#10;    while ((reversals &lt; stop_reversals)) {&amp;#10;        response = (np.random.rand() &lt; 0.7);&amp;#10;        if (response) {&amp;#10;            correct_responses += 1;&amp;#10;            if ((correct_responses === 2)) {&amp;#10;                correct_responses = 0;&amp;#10;                contrast = Math.max(0, (contrast - step));&amp;#10;                if ((last_direction === &quot;up&quot;)) {&amp;#10;                    reversals += 1;&amp;#10;                    reversal_contrasts.push(contrast);&amp;#10;                }&amp;#10;                last_direction = &quot;down&quot;;&amp;#10;            }&amp;#10;        } else {&amp;#10;            contrast += step;&amp;#10;            correct_responses = 0;&amp;#10;            if ((last_direction === &quot;down&quot;)) {&amp;#10;                reversals += 1;&amp;#10;                reversal_contrasts.push(contrast);&amp;#10;            }&amp;#10;            last_direction = &quot;up&quot;;&amp;#10;        }&amp;#10;        trials.push({&quot;trial&quot;: (trials.length + 1), &quot;contrast&quot;: contrast, &quot;response&quot;: response, &quot;reversals&quot;: reversals});&amp;#10;    }&amp;#10;    threshold = np.mean(reversal_contrasts.slice((- (stop_reversals - 1))));&amp;#10;    return [threshold, trials];&amp;#10;}&amp;#10;[threshold, trials] = staircase_2down_1up();&amp;#10;console.log(`Umbral estimado de contraste: ${threshold}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import csv&amp;#10;&amp;#10;# Variables estaticas&amp;#10;fft_starting_value = 25&amp;#10;fft_step_size = 2&amp;#10;staircase_test_orientation = get_random_orientation()&amp;#10;&amp;#10;# Inicializacion de variables que posteriormente cambian&amp;#10;fft = fft_starting_value&amp;#10;step = fft_step_size&amp;#10;reversals = 0&amp;#10;last_direction = None&amp;#10;reversal_ffts = []&amp;#10;correct_responses = 0&amp;#10;trials = []&amp;#10;&amp;#10;# Para almacenar las respuestas del participante&amp;#10;response = None&amp;#10;&amp;#10;# Cargar frecuencia espacial del test&amp;#10;#threshold_dict = load_thresholds_from_json()&amp;#10;#grating_8.sf = threshold_dict['spatial_frequency_threshold']&amp;#10;#grating_8.ori = staircase_test_orientation&amp;#10;&amp;#10;#print(f&quot;Se ha establecido la frecuencia espacial del estímulo a un valor de {threshold_dict['spatial_frequency_threshold']} unidades.&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="keys = event.getKeys()&amp;#10;&amp;#10;if 's' in keys: # El paciente ve el estimulo&amp;#10;    response = True&amp;#10;elif 'n' in keys: # El paciente no ve las lineas&amp;#10;    response = False&amp;#10;'''&amp;#10;elif 'right' in keys and staircase_test_orientation == 45: # Acierto&amp;#10;    response = True&amp;#10;elif 'left' in keys and staircase_test_orientation == 135: # Acierto&amp;#10;    response = True&amp;#10;elif 'right' in keys or 'left' in keys:&amp;#10;    response = False&amp;#10;'''&amp;#10;# Lógica del staircase&amp;#10;if response is not None:&amp;#10;    if response:  # Respuesta correcta: el paciente ve el parpadeo&amp;#10;        correct_responses += 1&amp;#10;        if correct_responses == 2:  # Después de 2 respuestas correctas consecutivas&amp;#10;            correct_responses = 0&amp;#10;            fft = max(0, fft + step)  # Aumentar flicker&amp;#10;            last_direction = &quot;down&quot;&amp;#10;    else:  # Respuesta incorrecta: el paciente no aprecia el parpadeo&amp;#10;        fft -= step  # disminuir el parpadeo&amp;#10;        correct_responses = 0&amp;#10;        if last_direction == &quot;down&quot;:&amp;#10;            reversals += 1&amp;#10;            reversal_ffts.append(fft)&amp;#10;            # Regla para aumentar la granularidad del test&amp;#10;            if (reversals % 3 == 0) and reversals != 0:&amp;#10;                step = step/2&amp;#10;                print(f&quot;Reversals = {reversals}; New step = {step}&quot;)&amp;#10;                last_direction = &quot;up&quot;&amp;#10;            else:&amp;#10;                print(f'Reversal detected ({reversals})')&amp;#10;        last_direction = &quot;up&quot;&amp;#10;        &amp;#10;    grating_8.setAutoDraw(False)&amp;#10;    show_noise(dots_white_4, dots_black_4, staircase_noise_duration)&amp;#10;    grating_8.setAutoDraw(True)&amp;#10;    &amp;#10;    #staircase_test_orientation = get_random_orientation()&amp;#10;    #grating_8.ori = staircase_test_orientation&amp;#10;    &amp;#10;    # Actualizar el contraste del estímulo&amp;#10;    #grating.contrast = contrast&amp;#10;    &amp;#10;    # Registrar la información del ensayo&amp;#10;    trials.append({&amp;#10;        'trial': len(trials) + 1,&amp;#10;        'fft': fft,&amp;#10;        'response': response,&amp;#10;        'reversals': reversals&amp;#10;    })&amp;#10;    &amp;#10;    # Restablecer la respuesta para el siguiente ensayo&amp;#10;    response = None&amp;#10;        &amp;#10;    # Regla de detencion&amp;#10;    if reversals &gt;= stop_reversals:&amp;#10;        print(trials)&amp;#10;        # almaceno trials en 'data' para su posterior analisis&amp;#10;        staircase_data_filename = f&quot;./data/{expInfo['participant']}/fft_staircase_data_{expInfo['participant']}.csv&quot;&amp;#10;        with open(staircase_data_filename, mode='w', newline='') as file:&amp;#10;            writer = csv.DictWriter(file, fieldnames=['trial', 'fft', 'response', 'reversals'])&amp;#10;            writer.writeheader()&amp;#10;            writer.writerows(trials)&amp;#10;        &amp;#10;        # Actualizar y almacenar el diccionario de thresholds&amp;#10;        test_fft = get_threshold('fft', staircase_data_filename)&amp;#10;        print(f&quot;FFT Threshold for patient: {test_fft}&quot;)&amp;#10;        threshold_dict['flicker_threshold'] = test_fft&amp;#10;        save_thresholds_to_json(threshold_dict)&amp;#10;&amp;#10;        continueRoutine = False&amp;#10;&amp;#10;#########################################################&amp;#10;#############____________LOGS_________###################&amp;#10;#########################################################&amp;#10;logs_13.text = f&quot;Step Size = {step}\nFFT freq = {fft} Hz&quot;&amp;#10;dots_white_4.setAutoDraw(False)&amp;#10;dots_black_4.setAutoDraw(False)" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="contrast_pos = slider.value;&amp;#10;if (((opacity_pos !== null) &amp;&amp; (contrast_pos !== null))) {&amp;#10;    logs.text = `contrast = ${util.pad(Number.parseFloat(contrast_pos).toFixed(1), 1)}`;&amp;#10;    grating.contrast = contrast_pos;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_21" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_17" plugin="None">
        <Param val="'s','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_17" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs_13" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.45)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <GratingComponent name="grating_8" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="avg" valType="str" updates="constant" name="blendmode"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1.0" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="circle" valType="file" updates="constant" name="mask"/>
        <Param val="grating_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0.0" valType="num" updates="constant" name="phase"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="num" updates="constant" name="sf"/>
        <Param val="grating_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="sin" valType="file" updates="constant" name="tex"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </GratingComponent>
      <DotsComponent name="dots_white_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="$[1.0,1.0,1.0]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_4" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black_4" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_4" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <KeyboardComponent name="key_resp_18" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_18" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="FPS_counter_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="tiempo_anterior = 0;&amp;#10;fps = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="tiempo_anterior = 0 &amp;#10;fps = 0  # Variable para almacenar el FPS" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="tiempo_actual = t&amp;#10;delta_tiempo = tiempo_actual - tiempo_anterior # tiempo desde el frame anterior&amp;#10;&amp;#10;if delta_tiempo &gt; 0:&amp;#10;    fps = 1.0 / delta_tiempo  # Frecuencia: (1 / tiempo entre frames) (Hz)&amp;#10;&amp;#10;tiempo_anterior = tiempo_actual&amp;#10;&amp;#10;FPS_logs_2.text = f&quot;FPS: {fps:.2f}&quot;  # Mostrar con 2 decimales&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="tiempo_actual = t;&amp;#10;delta_tiempo = (tiempo_actual - tiempo_anterior);&amp;#10;if ((delta_tiempo &gt; 0)) {&amp;#10;    fps = (1.0 / delta_tiempo);&amp;#10;}&amp;#10;tiempo_anterior = tiempo_actual;&amp;#10;FPS_logs_2.text = `FPS: ${util.pad(Number.parseFloat(fps).toFixed(2), 1)}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="FPS_counter_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="FPS_logs_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="FPS_logs_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="INSTRUCTIONS">
      <RoutineSettingsComponent name="INSTRUCTIONS" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="INSTRUCTIONS" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="logo_bio_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/BIOBIZKAIA_horizontal_CMYK.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="logo_bio_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.4, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="logo_compneurolab_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="images/compneuro_horizontal.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="logo_compneurolab_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.45, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.6, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="text_title_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_title_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="TEST DE EVALUACIÓN DE LOS SISTEMAS MAGNOCELULAR Y PARVOCELULAR" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text_instructions_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_instructions_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.20)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="1.5" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="#text_instructions.alignHoriz='left'&amp;#10;#text_instructions.wrapWidth=1.0&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;psychoJS.window.color = &quot;grey&quot;;&amp;#10;instruction_no = 0;&amp;#10;messages_instructions = [title];&amp;#10;for (var i, _pj_c = 0, _pj_a = util.range(1, 6), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    i = _pj_a[_pj_c];&amp;#10;    var_name = `instruction_${i}`;&amp;#10;    if (_pj.in_es6(var_name, globals())) {&amp;#10;        instruction = globals()[var_name];&amp;#10;        if (instruction) {&amp;#10;            messages_instructions.push(instruction);&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;console.log(`Lista de instrucciones cargada: ${messages_instructions}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="win.color = &quot;grey&quot;&amp;#10;&amp;#10;&amp;#10;instruction_no = 0&amp;#10;messages_instructions = [title]&amp;#10;for i in range(1, 6):&amp;#10;    var_name = f&quot;instruction_{i}&quot;&amp;#10;    if var_name in globals():&amp;#10;        instruction = globals()[var_name]&amp;#10;        if instruction: # Si la instrucción no esta vacía se añade a la lista que aparecera por pantalla&amp;#10;            messages_instructions.append(instruction)&amp;#10;print(f'Lista de instrucciones cargada: {messages_instructions}')" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_instructions_2.text = messages_instructions[instruction_no]&amp;#10;    &amp;#10;if instruction_no == (len(messages_instructions) - 1):&amp;#10;    button_next_instruction_2.opacity = 0&amp;#10;    #button_next_instruction.status = PAUSED&amp;#10;else:&amp;#10;    button_next_instruction_2.opacity = 1.0&amp;#10;    #button_next_instruction.status = STARTED&amp;#10;&amp;#10;if instruction_no == 0:&amp;#10;    button_previous_instruction_2.opacity = 0&amp;#10;    #button_previous_instruction.status = PAUSED&amp;#10;else:&amp;#10;    button_previous_instruction_2.opacity = 1.0&amp;#10;    #button_previous_instruction.status = STARTED&amp;#10;&amp;#10;###################################################&amp;#10;####________________EVENTS_____________________####&amp;#10;###################################################&amp;#10;&amp;#10;keys = event.getKeys()  # Cada llamada al buffer lo vaciía (teoricamente)&amp;#10;&amp;#10;#if 'space' in keys:&amp;#10;#    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_instructions_2.text = messages_instructions[instruction_no];&amp;#10;if ((instruction_no === (messages_instructions.length - 1))) {&amp;#10;    button_next_instruction_2.opacity = 0;&amp;#10;} else {&amp;#10;    button_next_instruction_2.opacity = 1.0;&amp;#10;}&amp;#10;if ((instruction_no === 0)) {&amp;#10;    button_previous_instruction_2.opacity = 0;&amp;#10;} else {&amp;#10;    button_previous_instruction_2.opacity = 1.0;&amp;#10;}&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ButtonComponent name="button_next_instruction_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0.1" valType="num" updates="constant" name="borderWidth"/>
        <Param val="if instruction_no &lt; len(messages_instructions)-1:&amp;#10;    instruction_no+=1" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 0.0039, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button_next_instruction_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(0.5, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Siguiente --&gt;" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <ButtonComponent name="button_previous_instruction_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="None" valType="color" updates="constant" name="borderColor"/>
        <Param val="0.1" valType="num" updates="constant" name="borderWidth"/>
        <Param val="if 0 &lt; instruction_no:&amp;#10;    instruction_no-=1" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-1.0000, 0.0039, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arvo" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button_previous_instruction_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(-0.5, -0.4)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.25, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;--Anterior" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
      <KeyboardComponent name="key_resp_skip_instructions_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_skip_instructions_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="LOAD_THRESHOLDS">
      <RoutineSettingsComponent name="LOAD_THRESHOLDS" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="LOAD_THRESHOLDS" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_22" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import tkinter as tk&amp;#10;from tkinter import messagebox&amp;#10;import json&amp;#10;&amp;#10;# Llamada a la función&amp;#10;threshold_dict = load_thresholds_from_json()&amp;#10;&amp;#10;# Manejo del resultado&amp;#10;if threshold_dict == -1:&amp;#10;    # Crear ventana para manejar el caso de archivo no encontrado&amp;#10;    root = tk.Tk()&amp;#10;    root.withdraw()&amp;#10;    use_defaults = messagebox.askyesno(&amp;#10;        &quot;Archivo no encontrado&quot;,&amp;#10;        &quot;No se encontró el archivo de umbrales. ¿Desea usar valores por defecto?&quot;&amp;#10;    )&amp;#10;    root.destroy()&amp;#10;    &amp;#10;    if use_defaults:&amp;#10;        # Valores por defecto&amp;#10;        threshold_dict = {&amp;#10;            &quot;spatial_frequency_threshold&quot;: 100,&amp;#10;            &quot;flicker_threshold&quot;: 50,&amp;#10;            &quot;contrast_threshold&quot;: 0.01,&amp;#10;            &quot;color_threshold&quot;: {&amp;#10;                &quot;green&quot;: 25,&amp;#10;                &quot;red&quot;: 25&amp;#10;            }&amp;#10;        }&amp;#10;        print(&quot;Usando valores por defecto.&quot;)&amp;#10;    else:&amp;#10;        raise FileNotFoundError(&quot;El archivo de umbrales no se encontró y no se aceptaron valores por defecto.&quot;)&amp;#10;&amp;#10;else:&amp;#10;    # Mostrar los valores cargados en una ventana&amp;#10;    root = tk.Tk()&amp;#10;    root.withdraw()&amp;#10;    values = &quot;\n&quot;.join([f&quot;{key}: {value}&quot; for key, value in threshold_dict.items()])&amp;#10;    messagebox.showinfo(&amp;#10;        f&quot;Se cargaron los siguientes valores para el usuario {expInfo['participant']}:\n\n{values}\nSe ha establecido la siguiente configuración: {general_config}&quot;&amp;#10;    )&amp;#10;    root.destroy()&amp;#10;&amp;#10;# Ahora `threshold_dict` contiene los valores seleccionados o los cargados&amp;#10;print(threshold_dict)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_22" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="BL6_">
      <RoutineSettingsComponent name="BL6_" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL6_" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
    </Routine>
    <Routine name="BL_7_CONTRAST">
      <RoutineSettingsComponent name="BL_7_CONTRAST" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="BL_7_CONTRAST" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="semantic_stim_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="semantic_stim_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_22" plugin="None">
        <Param val="'space', 'right', 'left'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_22" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <PolygonComponent name="logs_background_14" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="logs_background_14" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.75, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.5, 1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_23" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="logs_parametros_trial_8.alignText = &quot;left&quot;;&amp;#10;logs_parametros_trial_8.anchorHoriz = &quot;left&quot;;&amp;#10;first_frame = true;&amp;#10;flag_skip_all = false;&amp;#10;flag_answer_registered = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="####################################################&amp;#10;########____LOAD STAIRCASE TEST RESULTS____#########&amp;#10;####################################################&amp;#10;&amp;#10;contrast_threshold = threshold_dict['contrast_threshold']&amp;#10;semantic_stim_2.contrast = contrast_threshold + contrast_threshold*offset_porcentual&amp;#10;&amp;#10;logs_parametros_trial_9.alignText='left'&amp;#10;logs_parametros_trial_9.anchorHoriz='left'&amp;#10;&amp;#10;event.clearEvents()&amp;#10;&amp;#10;first_frame             = True&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;success                 = -1&amp;#10;undecided               = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="logs_parametros_trial_9.setText(&amp;#10;    f&quot;Prueba 7 - Estímulos semánticos\n&quot;&amp;#10;    f&quot;Intento: {intento}\n&quot;&amp;#10;    f&quot;Excentricidad: {excentricidad}º\n&quot;&amp;#10;    f&quot;Tamaño Estímulo: {tamanyo:.2f}\n&quot;&amp;#10;    f&quot;Tipo: {tipo}\n&quot;  &amp;#10;)&amp;#10;&amp;#10;####################################################&amp;#10;##############____EVENTS &amp; STATES____###############&amp;#10;####################################################&amp;#10;&amp;#10;flag_skip_all           = False&amp;#10;flag_answer_registered  = False&amp;#10;undecided               = False&amp;#10;success                 = -1&amp;#10;&amp;#10;keys = event.getKeys()&amp;#10;if 'space' in keys:&amp;#10;    flag_skip_all = True&amp;#10;    &amp;#10;elif 'right' in keys and respuesta == 'vivo': # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'left' in keys and respuesta == 'inerte': # Acierto:&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = True&amp;#10;elif 'right' in keys or 'left' in keys: # Respuesta incorrecta&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;elif 'down' in keys: # NS/NC&amp;#10;    flag_answer_registered  = True&amp;#10;    success                 = False&amp;#10;    undecided               = True&amp;#10;&amp;#10;####################################################&amp;#10;###############____TIME &amp; NOISE____#################&amp;#10;####################################################&amp;#10;&amp;#10;if first_frame: # Ejecucion unica&amp;#10;    dots_white_10.setAutoDraw(False)&amp;#10;    dots_black_10.setAutoDraw(False)&amp;#10;    first_time = False&amp;#10;&amp;#10;if (t&gt;stim_time) or flag_answer_registered: # time exceeded OR answer registered&amp;#10;    # SHOW RESULTS IF FEEDBACK ACTIVATED&amp;#10;    if FEEDBACK:&amp;#10;        print(f&quot;El resultado es: {success}&quot;)&amp;#10;        show_feedback(feedback_txt_6, success)&amp;#10;    semantic_stim_2.setAutoDraw(False)&amp;#10;    show_noise(dots_white_10, dots_black_10, response_time, orientacion, feedback_txt_6) #only one call&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;if flag_skip_all:&amp;#10;    trials_bl_7.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;logs_parametros_trial_8.setText(`Prueba 5 - Estímulos semánticos&amp;#10;Intento: ${intento}&amp;#10;Excentricidad: ${excentricidad}º&amp;#10;Tamaño Estímulo: ${util.pad(Number.parseFloat(tamanyo).toFixed(2), 1)}&amp;#10;Tipo: ${tipo}`&amp;#10;);&amp;#10;flag_skip_all = false;&amp;#10;flag_answer_registered = false;&amp;#10;keys = psychoJS.eventManager.getKeys();&amp;#10;if (_pj.in_es6(&quot;space&quot;, keys)) {&amp;#10;    flag_skip_all = true;&amp;#10;} else {&amp;#10;    if (_pj.in_es6(&quot;right&quot;, keys)) {&amp;#10;        flag_answer_registered = true;&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(&quot;left&quot;, keys)) {&amp;#10;            flag_answer_registered = true;&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(&quot;down&quot;, keys)) {&amp;#10;                flag_answer_registered = true;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if (first_frame) {&amp;#10;    dots_white_9.setAutoDraw(false);&amp;#10;    dots_black_9.setAutoDraw(false);&amp;#10;    first_time = false;&amp;#10;}&amp;#10;if (((t &gt; stim_time) || flag_answer_registered)) {&amp;#10;    stim.setAutoDraw(false);&amp;#10;    show_noise(dots_white_9, dots_black_9, response_time);&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if (flag_skip_all) {&amp;#10;    trials_bl_5.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_23" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="logs_parametros_trial_9" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs_parametros_trial_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="right_arrow_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="right_arrow_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="90" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrow" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="left_arrow_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="left_arrow_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="-90" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="arrow" valType="str" updates="None" name="shape"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="right_arrow_text_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="right_arrow_text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.4, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Ser vivo" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="left_arrow_text_2" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="left_arrow_text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.4, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Inerte" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <DotsComponent name="dots_white_10" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_white_10" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <DotsComponent name="dots_black_10" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="1.0" valType="num" updates="constant" name="coherence"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="0.0" valType="num" updates="constant" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="3" valType="num" updates="None" name="dotLife"/>
        <Param val="2" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[1.75,1]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_black_10" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="0.1" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <TextComponent name="feedback_txt_6" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.085" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_txt_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="PUPILOMETRY_TASK_adaptation_period">
      <RoutineSettingsComponent name="PUPILOMETRY_TASK_adaptation_period" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="PUPILOMETRY_TASK_adaptation_period" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_countdown_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_countdown_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="adaptation_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(adaptation_time-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_25" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.window.color = &quot;black&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="win.color = &quot;black&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_25" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_23" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_23" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="PUPILOMETRY_TASK_flash">
      <RoutineSettingsComponent name="PUPILOMETRY_TASK_flash" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="PUPILOMETRY_TASK_flash" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_24" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="psychoJS.window.color = color;&amp;#10;psychoJS.experiment.addData(`${color}StartTime`, time.time());&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="win.color = color&amp;#10;thisExp.addData(f&quot;{color}StartTime&quot;, time.time())" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.window.color = &quot;grey&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="win.color = &quot;grey&quot;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_24" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="flash_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(flash_time-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_24" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_24" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ET_VISUAL_SEARCH">
      <RoutineSettingsComponent name="ET_VISUAL_SEARCH" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ET_VISUAL_SEARCH" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="end_of_routine_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;visual_search_image_time + visual_search_wait_time:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; (visual_search_image_time + visual_search_wait_time))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="end_of_routine_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="image_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$path" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1920*2/1920, 1080*2/1920)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="visual_search_image_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
    </Routine>
    <Routine name="DVS_COHERENCE">
      <RoutineSettingsComponent name="DVS_COHERENCE" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="DVS_COHERENCE" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <DotsComponent name="dots_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="noise_dots_coherence" valType="num" updates="constant" name="coherence"/>
        <Param val="$noise_dots_color" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="noise_dots_direction" valType="num" updates="set every frame" name="dir"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="noise_dots_lifetime" valType="num" updates="None" name="dotLife"/>
        <Param val="noise_dots_size" valType="num" updates="constant" name="dotSize"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(0.0, 0.0)" valType="list" updates="constant" name="fieldPos"/>
        <Param val="square" valType="str" updates="constant" name="fieldShape"/>
        <Param val="[field_size[0]+0.5,field_size[1]+0.5]" valType="num" updates="constant" name="fieldSize"/>
        <Param val="noise_dots_no" valType="int" updates="constant" name="nDots"/>
        <Param val="dots_2" valType="code" updates="None" name="name"/>
        <Param val="direction" valType="str" updates="None" name="noiseDots"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="repeat" valType="str" updates="None" name="refreshDots"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="same" valType="str" updates="None" name="signalDots"/>
        <Param val="noise_dots_speed" valType="num" updates="constant" name="speed"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </DotsComponent>
      <PolygonComponent name="dot_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.2000, -0.2000, -0.2000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$dot_color" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="dot_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="dot_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <CodeComponent name="code_26" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import numpy as np&amp;#10;&amp;#10;def move_dot_smooth(dot, dot_speed, field_size, current_angle, frames_in_direction, frame_count):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Mueve el punto 'dot' de forma suave dentro de los límites de la pantalla.&amp;#10;&amp;#10;    dot: objeto visual de PsychoPy que se va a mover.&amp;#10;    dot_speed: velocidad del punto.&amp;#10;    field_size: tamaño del campo [ancho, alto] en unidades de PsychoPy.&amp;#10;    current_angle: ángulo actual de la dirección del punto.&amp;#10;    frames_in_direction: número de frames en los que el punto mantiene la misma dirección.&amp;#10;    frame_count: contador de frames que indica cuántos frames han pasado en la dirección actual.&amp;#10;&amp;#10;    Returns:&amp;#10;    - new_angle: El ángulo actualizado para la próxima llamada.&amp;#10;    - frame_count: El contador de frames actualizado.&amp;#10;    &quot;&quot;&quot;&amp;#10;    # Si hemos alcanzado el límite de frames para la dirección actual, cambiamos el ángulo&amp;#10;    if frame_count &gt;= frames_in_direction:&amp;#10;        # Elegir un nuevo ángulo aleatorio cercano al actual para mantener la suavidad&amp;#10;        current_angle += np.random.uniform(-np.pi/8, np.pi/8)&amp;#10;        frame_count = 0  # Reiniciar el contador de frames en la nueva dirección&amp;#10;    else:&amp;#10;        frame_count += 1&amp;#10;&amp;#10;    # Calcular el desplazamiento basado en el ángulo&amp;#10;    dx = dot_speed * np.cos(current_angle)&amp;#10;    dy = dot_speed * np.sin(current_angle)&amp;#10;&amp;#10;    # Calcular la nueva posición&amp;#10;    new_x = dot.pos[0] + dx&amp;#10;    new_y = dot.pos[1] + dy&amp;#10;&amp;#10;    # Verificar los límites de la pantalla y ajustar si es necesario&amp;#10;    if new_x &lt; -field_size[0]/2:&amp;#10;        new_x = -field_size[0]/2&amp;#10;        current_angle = np.pi - current_angle  # Invertir dirección horizontal&amp;#10;    elif new_x &gt; field_size[0]/2:&amp;#10;        new_x = field_size[0]/2&amp;#10;        current_angle = np.pi - current_angle&amp;#10;&amp;#10;    if new_y &lt; -field_size[1]/2:&amp;#10;        new_y = -field_size[1]/2&amp;#10;        current_angle = -current_angle  # Invertir dirección vertical&amp;#10;    elif new_y &gt; field_size[1]/2:&amp;#10;        new_y = field_size[1]/2&amp;#10;        current_angle = -current_angle&amp;#10;&amp;#10;    # Actualizar la posición del punto&amp;#10;    dot.pos = (new_x, new_y)&amp;#10;&amp;#10;    return current_angle, frame_count&amp;#10;&amp;#10;def move_dot_lateral(dot, dot_speed, field_size, direction, frame_count):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Mueve el punto 'dot' de forma lineal lateral (derecha a izquierda) dentro de los límites del campo definido.&amp;#10;&amp;#10;    dot: objeto visual de PsychoPy que se va a mover.&amp;#10;    dot_speed: velocidad del punto.&amp;#10;    field_size: tamaño del campo [ancho, alto] en unidades de PsychoPy.&amp;#10;    direction: dirección actual del movimiento, 1 para derecha y -1 para izquierda.&amp;#10;    frame_count: contador de frames que indica cuántos frames han pasado.&amp;#10;&amp;#10;    Returns:&amp;#10;    - direction: La dirección actualizada para la próxima llamada.&amp;#10;    - frame_count: El contador de frames actualizado.&amp;#10;    &quot;&quot;&quot;&amp;#10;    # Calcular el desplazamiento basado en la dirección&amp;#10;    dx = dot_speed * direction&amp;#10;    new_x = dot.pos[0] + dx&amp;#10;    new_y = dot.pos[1]  # Mantener y constante&amp;#10;&amp;#10;    # Verificar los límites de la pantalla en el eje x y ajustar si es necesario&amp;#10;    if new_x &lt; -field_size[0] / 2:&amp;#10;        new_x = -field_size[0] / 2&amp;#10;        direction *= -1  # Cambiar de dirección&amp;#10;    elif new_x &gt; field_size[0] / 2:&amp;#10;        new_x = field_size[0] / 2&amp;#10;        direction *= -1  # Cambiar de dirección&amp;#10;&amp;#10;    # Actualizar la posición del punto&amp;#10;    dot.pos = (new_x, new_y)&amp;#10;&amp;#10;    return direction, frame_count + 1&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import * as np from 'numpy';&amp;#10;function move_dot_smooth(dot, dot_speed, field_size, current_angle, frames_in_direction, frame_count) {&amp;#10;    /*&amp;#10;    Mueve el punto 'dot' de forma suave dentro de los límites de la pantalla.&amp;#10;&amp;#10;    dot: objeto visual de PsychoPy que se va a mover.&amp;#10;    dot_speed: velocidad del punto.&amp;#10;    field_size: tamaño del campo [ancho, alto] en unidades de PsychoPy.&amp;#10;    current_angle: ángulo actual de la dirección del punto.&amp;#10;    frames_in_direction: número de frames en los que el punto mantiene la misma dirección.&amp;#10;    frame_count: contador de frames que indica cuántos frames han pasado en la dirección actual.&amp;#10;&amp;#10;    Returns:&amp;#10;    - new_angle: El ángulo actualizado para la próxima llamada.&amp;#10;    - frame_count: El contador de frames actualizado.&amp;#10;    */&amp;#10;    var dx, dy, new_x, new_y;&amp;#10;    if ((frame_count &gt;= frames_in_direction)) {&amp;#10;        current_angle += np.random.uniform(((- np.pi) / 8), (np.pi / 8));&amp;#10;        frame_count = 0;&amp;#10;    } else {&amp;#10;        frame_count += 1;&amp;#10;    }&amp;#10;    dx = (dot_speed * np.cos(current_angle));&amp;#10;    dy = (dot_speed * np.sin(current_angle));&amp;#10;    new_x = (dot.pos[0] + dx);&amp;#10;    new_y = (dot.pos[1] + dy);&amp;#10;    if ((new_x &lt; ((- field_size[0]) / 2))) {&amp;#10;        new_x = ((- field_size[0]) / 2);&amp;#10;        current_angle = (np.pi - current_angle);&amp;#10;    } else {&amp;#10;        if ((new_x &gt; (field_size[0] / 2))) {&amp;#10;            new_x = (field_size[0] / 2);&amp;#10;            current_angle = (np.pi - current_angle);&amp;#10;        }&amp;#10;    }&amp;#10;    if ((new_y &lt; ((- field_size[1]) / 2))) {&amp;#10;        new_y = ((- field_size[1]) / 2);&amp;#10;        current_angle = (- current_angle);&amp;#10;    } else {&amp;#10;        if ((new_y &gt; (field_size[1] / 2))) {&amp;#10;            new_y = (field_size[1] / 2);&amp;#10;            current_angle = (- current_angle);&amp;#10;        }&amp;#10;    }&amp;#10;    dot.pos = [new_x, new_y];&amp;#10;    return [current_angle, frame_count];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="current_angle = np.random.uniform(0, (2 * np.pi));&amp;#10;frame_count = 0;&amp;#10;frames_in_direction = 20;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="current_angle = np.random.uniform(0, 2 * np.pi)  # Ángulo inicial aleatorio&amp;#10;frame_count = 0&amp;#10;frames_in_direction = 20  # Ajusta según la duración que desees para cada dirección&amp;#10;direction = 1 # start value of direction to te right&amp;#10;mode = 3 # behaviour of the stimuli and noise dots 1... 2... 3: Move noise with stimuli. 4:..." valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="# Dentro del bucle de cada frame&amp;#10;&amp;#10;#if  mode == 1: # movimiento random del estimulo. Cuando cambia la coherencia del ruido el estimulo se mantiene igual&amp;#10;#    current_angle, frame_count = move_dot_smooth(dot_2, dot_speed, field_size, current_angle, frames_in_direction, frame_count)&amp;#10;    &amp;#10;#elif mode == 2: # movimiento lateral del estimulo. Cuando cambia la coherencia del ruido el estimulo se mantiene igual&amp;#10;#    direction, frame_count = move_dot_lateral(dot_2, dot_speed, field_size, direction, frame_count)&amp;#10;    &amp;#10;if mode == 3:&amp;#10;    current_angle, frame_count = move_dot_smooth(dot_2, dot_speed, field_size, current_angle, frames_in_direction, frame_count)&amp;#10;    &amp;#10;    if noise_coherent_motion: # Move noise with stimuli&amp;#10;        if frame_count % frames_in_direction*5 == 0: # each 100 frames change angle&amp;#10;            desvio = random.uniform(-20, 20)&amp;#10;        noise_dots_direction = math.degrees(current_angle) + desvio&amp;#10;&amp;#10;elif mode == 4:&amp;#10;    if noise_coherent_motion: # True&amp;#10;        direction, frame_count = move_dot_lateral(dot_2, dot_speed, field_size, direction, frame_count)&amp;#10;    else:&amp;#10;        current_angle, frame_count = move_dot_smooth(dot_2, dot_speed, field_size, current_angle, frames_in_direction, frame_count)&amp;#10;&amp;#10;# FLANCOS ASCENDENTE Y DESCENDENTE - Cambiar la coherencia del ruido segun el tiempo&amp;#10;if t&gt;10 and t&lt;20:&amp;#10;    if not noise_coherent_motion:&amp;#10;        dots_2.setFieldCoherence(1)&amp;#10;        noise_coherent_motion = 1&amp;#10;        #noise_dots_direction = 90&amp;#10;        thisExp.addData(f&quot;DVS_noise_coherent_motion_mode_3_StartTime&quot;, time.time())&amp;#10;elif t&gt;20 and t&lt;30:&amp;#10;    if not noise_coherent_motion:&amp;#10;        dots_2.setFieldCoherence(1)&amp;#10;        noise_coherent_motion = 1&amp;#10;        noise_dots_direction = 0&amp;#10;        current_angle = 0&amp;#10;        direction = 1&amp;#10;        mode = 4&amp;#10;        thisExp.addData(f&quot;DVS_noise_coherent_motion_mode_4_StartTime&quot;, time.time())&amp;#10;else:&amp;#10;    if noise_coherent_motion:&amp;#10;        dots_2.setFieldCoherence(0)&amp;#10;        noise_coherent_motion = 0&amp;#10;        #noise_dots_direction = 0&amp;#10;    elif t&gt;40:&amp;#10;        continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="[current_angle, frame_count] = move_dot_smooth(dot_2, dot_speed, field_size, current_angle, frames_in_direction, frame_count);&amp;#10;if (((t &gt; 3) &amp;&amp; (t &lt; 10))) {&amp;#10;    if ((! noise_dots_coherence)) {&amp;#10;        dots_2.setFieldCoherence(1);&amp;#10;        noise_dots_coherence = 1;&amp;#10;    }&amp;#10;} else {&amp;#10;    if (noise_dots_coherence) {&amp;#10;        dots_2.setFieldCoherence(0);&amp;#10;        noise_dots_coherence = 0;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_26" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_25" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_25" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="CONFIGURATION_ROUTINE">
      <RoutineSettingsComponent name="CONFIGURATION_ROUTINE" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="Loads screen config (defined in screen_config.json) and initializes global variables &amp; functions" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="CONFIGURATION_ROUTINE" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="periphereal_region_diameter = 0&amp;#10;&amp;#10;################################&amp;#10;## CONFIGURACION MODIFICABLE: ##&amp;#10;################################&amp;#10;nombre_pantalla = 'pantalla4'&amp;#10;distancia_eyetracker = 0.65 # m&amp;#10;alpha = angulo_region_central = 9 # º DEG" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="periphereal_region_diameter = 0;&amp;#10;nombre_pantalla = &quot;pantalla4&quot;;&amp;#10;distancia_eyetracker = 0.65;&amp;#10;alpha = angulo_region_central = 9;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import json&amp;#10;import math&amp;#10;&amp;#10;print(f&quot;Participant info: {expInfo['participant']}&quot;)&amp;#10;&amp;#10;def calculate_diameter(excentricity, distance_to_screen, screen_height  = None):&amp;#10;    '''&amp;#10;    Calculates the diameter of circunference correspondint to the excentricity angle depending on the screen height and distance to screen.&amp;#10;    Params:&amp;#10;        -excentricity: angle of the excentricity in degrees&amp;#10;        -distance_to_screen: distance between patient and screen in meters&amp;#10;        -screen_height: height of the screen in meters (default is None, in this case the function will only return the diameter in unit that psychopy understands)&amp;#10;    Returns: &amp;#10;        -diameter_unit: unit diameter (this is the diameter that psychopy understands, it should match with the diameter in meters when used)&amp;#10;        -diameter_m: diameter in meters (this is the real diameter it should have in the screen)&amp;#10;    '''&amp;#10;&amp;#10;    if screen_height == None:&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return None, diameter_m&amp;#10;    else:&amp;#10;        diameter_unit = (2 * distance_to_screen * math.sin(math.radians(excentricity)))/screen_height&amp;#10;        diameter_m = 2 * distance_to_screen * math.sin(math.radians(excentricity))&amp;#10;        return diameter_unit, diameter_m&amp;#10;&amp;#10;def calcular_posicion_stim(angulo_grados, excentricidad, altura_pantalla):&amp;#10;    # primero calculo el diametro en pantalla correspondiente a la excentricidad &amp;#10;    diameter_unit, _ = calculate_diameter(excentricidad, 0.65, altura_pantalla)&amp;#10;    radius = diameter_unit / 2&amp;#10;    &amp;#10;    #hallo el punto donde mostrar el estimulo sobre la circunferencia de la excentricidad deseada&amp;#10;    theta = math.radians(angulo_grados)&amp;#10;    stim_x = radius * math.cos(theta)&amp;#10;    stim_y = radius * math.sin(theta)&amp;#10;    &amp;#10;    return stim_x, stim_y&amp;#10;# Cargar el archivo JSON&amp;#10;def cargar_configuracion(nombre_pantalla):&amp;#10;    with open('screen_config.json', 'r') as file:&amp;#10;        config = json.load(file)&amp;#10;    &amp;#10;    # Seleccionar la configuración específica&amp;#10;    pantalla_config = config.get(nombre_pantalla)&amp;#10;    &amp;#10;    if pantalla_config:&amp;#10;        nombre = pantalla_config['nombre']&amp;#10;        tamanyo_pulgadas = pantalla_config['tamanyo']&amp;#10;        dim_y = pantalla_config['dim_y']&amp;#10;        frecuencia_monitor = pantalla_config['frecuencia']&amp;#10;        &amp;#10;        print(f'Se ha cargado la siguiente configuracion:\n'&amp;#10;              f'Pantalla {nombre_pantalla} de {tamanyo_pulgadas} pulgadas con altura {dim_y} m')&amp;#10;        return nombre, tamanyo_pulgadas, dim_y,frecuencia_monitor&amp;#10;    else:&amp;#10;        print(&quot;Configuración de pantalla no encontrada.&quot;)&amp;#10;        return None, None, None, None  # Devolver None para cada valor esperado&amp;#10;&amp;#10;nombre, tamanyo_pulgadas, dim_y, frecuencia_monitor = cargar_configuracion(nombre_pantalla)&amp;#10;&amp;#10;&amp;#10;if nombre:  # Comprobar que nombre no es None antes de usar las variables&amp;#10;    # Calcular el diámetro de la frontera de la periferia&amp;#10;   &amp;#10;    diameter_unit, diameter_m = calculate_diameter(alpha, distancia_eyetracker, dim_y)&amp;#10;    periphereal_region_diameter = diameter_unit&amp;#10;&amp;#10;    log = f'Se ha cargado la configuracion de la {nombre_pantalla}:\n Pantalla {nombre} de {tamanyo_pulgadas} pulgadas con altura {dim_y} m y {frecuencia_monitor} Hz.'&amp;#10;    print(log)&amp;#10;    &amp;#10;logs2.setText(&amp;#10;             f'Se ha cargado la configuracion de la {nombre_pantalla}:\n Pantalla {nombre} de {tamanyo_pulgadas} pulgadas con altura {dim_y} m y {frecuencia_monitor} Hz.\n' &amp;#10;             f'Para una distancia de {distancia_eyetracker} m entre el sujeto y la pantalla, el diametro debe ser de {diameter_unit:.2f} u.\n'&amp;#10;             f'El diámetro equivalente es de {diameter_m:.2f} m'&amp;#10;             )" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="periphereal_region_result" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="periphereal_region_result" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="periphereal_region_diameter" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="foveal_region_result" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="foveal_region_result" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.25, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_4" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="False" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="logs2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="logs2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="time_daemon" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;3:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((t &gt; 3)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="time_daemon" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="GLOBAL_VARIABLES_AND_FUNCTIONS" plugin="None">
        <Param val="# IMPORTS&amp;#10;from psychopy import core&amp;#10;import random&amp;#10;import threading&amp;#10;import time&amp;#10;import pandas as pd&amp;#10;import os&amp;#10;&amp;#10;#GLOBAL VARIABLES&amp;#10;&amp;#10;# Grating config&amp;#10;global grating_mask&amp;#10;grating_mask = 'gauss'&amp;#10;&amp;#10;# MODULE 1: pretest - staircase test params&amp;#10;n_reversals_to_average = 5&amp;#10;stop_reversals = 6&amp;#10;staircase_noise_duration = 0.5&amp;#10;&amp;#10;# MODULE 1: Experiment params&amp;#10;stim_time = 2&amp;#10;response_time = 0.5 # time to answer after stimuli disapears &amp;#10;global FEEDBACK&amp;#10;FEEDBACK = True # value changed in Begin Experiment&amp;#10;global noise_type&amp;#10;noise_type= 2 # 1: FULL WINDOW // 2: ONLY STIM. Value changed in Begin Experiment (GUI)&amp;#10;noise_field_size = [1.75,1]&amp;#10;noise_dots = 25000&amp;#10;grating_size = (0.5,0.5)&amp;#10;&amp;#10;continueRoutine_ref = [True]&amp;#10;&amp;#10;# MODULE 2:&amp;#10;# Eye Tracking Resting State&amp;#10;eye_tracking_resting_time = 60&amp;#10;&amp;#10;# Visual Search params&amp;#10;visual_search_image_time = 5&amp;#10;visual_search_wait_time = 0.5&amp;#10;&amp;#10;# Eye Tracking DVS task params&amp;#10;dot_size            = 10/1000&amp;#10;noise_dots_size     = 15#dot_size&amp;#10;&amp;#10;noise_dots_no       = 700&amp;#10;dot_coherence       = 0.0&amp;#10;#noise_dots_direction= 45.0&amp;#10;#noise_coherent_motion = 0.0 # bool&amp;#10;&amp;#10;dot_speed           = 0.01&amp;#10;noise_dots_speed    = dot_speed&amp;#10;&amp;#10;dot_color           = 'red'&amp;#10;noise_dots_color    = 'white'&amp;#10;&amp;#10;noise_dots_lifetime = 200&amp;#10;field_size          = [1.5,1]&amp;#10;&amp;#10;# MODULE 3:&amp;#10;# Pupilometry params:&amp;#10;adaptation_time = 10#10*60 # 10 MINUTES&amp;#10;flash_time = 1 # 1 s&amp;#10;rest_time = 10 # 30 s&amp;#10;&amp;#10;# Fearful &amp; affective images params&amp;#10;autonomic_response_image_time = 5&amp;#10;autonomic_response_wait_time = 5&amp;#10;&amp;#10;# FUNCTIONS&amp;#10;def comprobar_respuesta(orientacion):&amp;#10;    keys = event.getKeys()&amp;#10;    if ('right' in keys and orientacion == 45) or ('left' in keys and orientacion == 135): # Acierto:&amp;#10;        success                 = True&amp;#10;    elif 'right' in keys or 'left' in keys: # Respuesta incorrecta&amp;#10;        success                 = False&amp;#10;    else:&amp;#10;        success = None&amp;#10;    return success&amp;#10;&amp;#10;def show_noise(dots_white, dots_black, duration, orientacion = None, feedback_txt = None):&amp;#10;    &amp;#10;    if noise_type == 1:&amp;#10;        dots_white.fieldShape = 'square'&amp;#10;        dots_black.fieldShape = 'square'&amp;#10;        dots_white.setSize(noise_field_size)&amp;#10;        dots_black.setSize(noise_field_size)&amp;#10;        &amp;#10;    elif noise_type == 2:&amp;#10;        dots_white.fieldShape = 'circle'&amp;#10;        dots_black.fieldShape = 'circle'&amp;#10;        dots_white.setSize(grating_size)&amp;#10;        dots_black.setSize(grating_size)&amp;#10;        &amp;#10;    # Habilitar los puntos de ruido&amp;#10;    dots_white.setAutoDraw(True)&amp;#10;    dots_black.setAutoDraw(True)&amp;#10;&amp;#10;    noise_timer = core.Clock()&amp;#10;    noise_timer.reset()&amp;#10;    &amp;#10;    # Mostrar el ruido durante el tiempo de duración especificado&amp;#10;    while noise_timer.getTime() &lt; duration:&amp;#10;        win.flip()  # Actualiza la ventana en cada frame para mantener la animación&amp;#10;        #igual se puede asignar una duración x al ruido y no tener que hacer esta guarrada&amp;#10;        # show feedback during noise&amp;#10;        if FEEDBACK and orientacion is not None and feedback_txt is not None:&amp;#10;            success = comprobar_respuesta(orientacion)&amp;#10;            if success is not None:&amp;#10;                show_feedback(feedback_txt, success)&amp;#10;    &amp;#10;    # Desactivar los puntos de ruido&amp;#10;    dots_white.setAutoDraw(False)&amp;#10;    dots_black.setAutoDraw(False)&amp;#10;&amp;#10;def get_random_orientation():&amp;#10;    return random.choice([45, 135])&amp;#10;&amp;#10;def get_threshold(test_var_name : str, results_csv_path):&amp;#10;    data = pd.read_csv(results_csv_path)&amp;#10;&amp;#10;    # Filtrar filas con reversals&amp;#10;    reversal_data = data[data['reversals'] &gt; 0]&amp;#10;&amp;#10;    threshold = reversal_data[test_var_name].tail(n_reversals_to_average).mean()&amp;#10;&amp;#10;    return threshold&amp;#10;&amp;#10;def show_feedback(feedback_txt, success):&amp;#10;    if success != -1 and success:&amp;#10;        feedback_txt.setText(&quot;✓&quot;)&amp;#10;    elif success != -1 and not success:&amp;#10;        feedback_txt.setText(&quot;x&quot;)&amp;#10;    else:&amp;#10;        feedback_txt.setText(&quot;&quot;)&amp;#10;    &amp;#10;    # Función interna para borrar el texto después del ruido&amp;#10;    def clear_text():&amp;#10;        time.sleep(staircase_noise_duration)&amp;#10;        feedback_txt.setText(&quot;&quot;)  # Limpia el texto&amp;#10;&amp;#10;    # Crear y lanzar el hilo para que borre el texto&amp;#10;    t = threading.Thread(target=clear_text)&amp;#10;    t.start()  # Inicia el hilo para que la ejecución principal continúe&amp;#10;    &amp;#10;    return&amp;#10;&amp;#10;&amp;#10;def load_sf():&amp;#10;    archivo_sf = f&quot;./data/{expInfo['participant']}/sf_staircase_data_{expInfo['participant']}.csv&quot;&amp;#10;    try:&amp;#10;        test_sf = get_threshold('spatial_frequency', archivo_sf)&amp;#10;        print(f'Se ha cargado la frecuencia espacial testada con un valor de {test_sf}')&amp;#10;        return test_sf&amp;#10;&amp;#10;    except FileNotFoundError:&amp;#10;        print(f'Error: El archivo {archivo_sf} no fue encontrado.')&amp;#10;        return -1&amp;#10;        &amp;#10;    except Exception as e:&amp;#10;        print(f'Error al cargar la frecuencia espacial del archivo {archivo_sf}: {str(e)}')&amp;#10;        return -1" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="import {core} from 'psychopy';&amp;#10;noise_dots = 25000;&amp;#10;grating_size = [0.5, 0.5];&amp;#10;function show_noise(dots_white, dots_black) {&amp;#10;    var duration, noise_timer;&amp;#10;    duration = 0.5;&amp;#10;    dots_white.setAutoDraw(true);&amp;#10;    dots_black.setAutoDraw(true);&amp;#10;    noise_timer = new util.Clock();&amp;#10;    noise_timer.reset();&amp;#10;    while ((noise_timer.getTime() &lt; duration)) {&amp;#10;        psychoJS.window.flip();&amp;#10;    }&amp;#10;    dots_white.setAutoDraw(false);&amp;#10;    dots_black.setAutoDraw(false);&amp;#10;}&amp;#10;function get_threshold(test_var_name, results_csv_path) {&amp;#10;    var data, n_reversals_to_average, reversal_data, threshold;&amp;#10;    data = pd.read_csv(results_csv_path);&amp;#10;    reversal_data = data[(data[&quot;reversals&quot;] &gt; 0)];&amp;#10;    n_reversals_to_average = 9;&amp;#10;    threshold = reversal_data[test_var_name].tail(n_reversals_to_average).mean();&amp;#10;    return (threshold - 50);&amp;#10;}&amp;#10;console.log(get_threshold(&quot;saturation&quot;, &quot;./data/saturation_staircase_test_data.csv&quot;));&amp;#10;" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="stop_reversals = 5&amp;#10;continueRoutine_ref = [True]&amp;#10;&amp;#10;global general_config, noise_type, grating_mask&amp;#10;&amp;#10;FEEDBACK = general_config[&quot;feedback&quot;]&amp;#10;if general_config[&quot;full_screen_noise&quot;]: # 1: FULL WINDOW // 2: ONLY STIM.&amp;#10;    noise_type = 1&amp;#10;    print(&quot;Stablished noise type 1&quot;)&amp;#10;else:&amp;#10;    noise_type = 2&amp;#10;    print(&quot;Stablished noise type 2&quot;)&amp;#10;&amp;#10;grating_mask = general_config[&quot;gabor_texture&quot;]&amp;#10;&amp;#10;&amp;#10;# DVS&amp;#10;noise_dots_coherence = 0.0&amp;#10;noise_coherent_motion = 0.0 # bool&amp;#10;noise_dots_direction= 45.0&amp;#10;desvio = 0" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="GLOBAL_VARIABLES_AND_FUNCTIONS" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="FPS_counter" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="tiempo_anterior = 0;&amp;#10;fps = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="tiempo_anterior = 0 &amp;#10;fps = 0  # Variable para almacenar el FPS" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="tiempo_actual = t&amp;#10;delta_tiempo = tiempo_actual - tiempo_anterior # tiempo desde el frame anterior&amp;#10;&amp;#10;if delta_tiempo &gt; 0:&amp;#10;    fps = 1.0 / delta_tiempo  # Frecuencia: (1 / tiempo entre frames) (Hz)&amp;#10;&amp;#10;tiempo_anterior = tiempo_actual&amp;#10;&amp;#10;FPS_logs.text = f&quot;FPS: {fps:.2f}&quot;  # Mostrar con 2 decimales&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="tiempo_actual = t;&amp;#10;delta_tiempo = (tiempo_actual - tiempo_anterior);&amp;#10;if ((delta_tiempo &gt; 0)) {&amp;#10;    fps = (1.0 / delta_tiempo);&amp;#10;}&amp;#10;tiempo_anterior = tiempo_actual;&amp;#10;FPS_logs.text = `FPS: ${util.pad(Number.parseFloat(fps).toFixed(2), 1)}`;&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="FPS_counter" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="DATA_MANAGEMENT" plugin="None">
        <Param val="import json&amp;#10;&amp;#10;# TEMPORAL --&gt; Se debe cargar de memoria o inicializar con valores nulos&amp;#10;'''&amp;#10;threshold_values = {&amp;#10;    'spatial_frequency_threshold': 53.98,   # Flotante&amp;#10;    'flicker_threshold': 40.0,              # Flotante&amp;#10;    'contrast_threshold': 0.002,            # Flotante&amp;#10;    'color_threshold': {                    # Diccionario para colores con valores flotantes&amp;#10;        'red': 0.93,&amp;#10;        'green': 3.44&amp;#10;    }                 &amp;#10;}&amp;#10;&amp;#10;threshold_values = {&amp;#10;    'spatial_frequency_threshold': None,  # Flotante&amp;#10;    'flicker_threshold': None,            # Flotante&amp;#10;    'contrast_threshold': None,           # Flotante&amp;#10;    'color_threshold': {}                 # Diccionario para colores con valores flotantes&amp;#10;}&amp;#10;'''&amp;#10;''' MODIFICAR EL DICCIONARIO&amp;#10;threshold_dict['spatial_frequency_threshold'] = spatial_frequency&amp;#10;threshold_dict['flicker_threshold'] = flicker&amp;#10;threshold_dict['contrast_threshold'] = contrast&amp;#10;threshold_dict['color_threshold'][color_name] = color_value&amp;#10;'''&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;# Función para mostrar el diccionario completo al final del test&amp;#10;def display_thresholds(threshold_dict):&amp;#10;    print(&quot;Valores de Umbrales del Paciente:&quot;)&amp;#10;    print(f&quot;Frecuencia Espacial: {threshold_dict['spatial_frequency_threshold']}&quot;)&amp;#10;    print(f&quot;Flicker: {threshold_dict['flicker_threshold']}&quot;)&amp;#10;    print(f&quot;Contraste: {threshold_dict['contrast_threshold']}&quot;)&amp;#10;    print(&quot;Umbrales de Color:&quot;)&amp;#10;    for color, value in threshold_dict['color_threshold'].items():&amp;#10;        print(f&quot;{color}: {value}&quot;)&amp;#10;&amp;#10;# Función para guardar el diccionario en un archivo JSON&amp;#10;def save_thresholds_to_json(threshold_dict, filename=f&quot;./data/{expInfo['participant']}/thresholds_{expInfo['participant']}.json&quot;):&amp;#10;    with open(filename, 'w') as f:&amp;#10;        json.dump(threshold_dict, f, indent=4)  # indent para que el JSON sea legible&amp;#10;    print(f&quot;Diccionario guardado en {filename}&quot;)&amp;#10;&amp;#10;# Función para cargar el diccionario desde un archivo JSON&amp;#10;def load_thresholds_from_json(filename=f&quot;./data/{expInfo['participant']}/thresholds_{expInfo['participant']}.json&quot;):&amp;#10;    if not os.path.exists(filename):&amp;#10;        # Archivo no encontrado&amp;#10;        return -1&amp;#10;    else:&amp;#10;        # Archivo encontrado y valores cargados&amp;#10;        with open(filename, 'r') as f:&amp;#10;            threshold_dict = json.load(f)&amp;#10;        print(f&quot;Diccionario cargado desde {filename}&quot;)&amp;#10;        return threshold_dict" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="DATA_MANAGEMENT" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="FPS_logs" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="FPS_logs" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="MODULE_SELECTION_GUI" plugin="None">
        <Param val="import tkinter as tk&amp;#10;from tkinter import ttk&amp;#10;&amp;#10;# Diccionario de configuración general&amp;#10;global general_config&amp;#10;general_config = {&amp;#10;    &quot;feedback&quot;: False,&amp;#10;    &quot;logs&quot;: False,&amp;#10;    &quot;full_screen_noise&quot;: False,&amp;#10;    &quot;gabor_texture&quot;: None,&amp;#10;    &quot;pretest_standard_values&quot;: False&amp;#10;}&amp;#10;&amp;#10;# Diccionario de módulos y tests con el nuevo parámetro &quot;enabled&quot;&amp;#10;modules = {&amp;#10;    &quot;module_1&quot;: {&amp;#10;        &quot;name&quot;: &quot;MODULE 1: Spatial Vision (low level-stimuli and semantic stimuli)&quot;,&amp;#10;        &quot;selected&quot;: False,&amp;#10;        &quot;tests&quot;: {&amp;#10;            &quot;pretest&quot;: {&quot;name&quot;: &quot;Threshold estimation test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_1&quot;: {&quot;name&quot;: &quot;1.Spatial Frequency test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_2&quot;: {&quot;name&quot;: &quot;2.Color Vision test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_3&quot;: {&quot;name&quot;: &quot;3.Contrast Sensitivity test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_4&quot;: {&quot;name&quot;: &quot;4.Semantic Stim Spatial Frequency test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: False},&amp;#10;            &quot;test_5&quot;: {&quot;name&quot;: &quot;5.Semantic Stim Contrast Sensitivity test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: False},&amp;#10;            &quot;test_6&quot;: {&quot;name&quot;: &quot;6.Semantic Stim Color Vision test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: False}&amp;#10;        }&amp;#10;    },&amp;#10;    &quot;module_2&quot;: {&amp;#10;        &quot;name&quot;: &quot;MODULE 2: Dynamic Vision and Eye Tracking&quot;,&amp;#10;        &quot;selected&quot;: False,&amp;#10;        &quot;tests&quot;: {&amp;#10;            &quot;test_1&quot;: {&quot;name&quot;: &quot;1.Fixation stability test (resting state eye-tracking test)&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_2&quot;: {&quot;name&quot;: &quot;2.Flicker fusion threshold test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_3&quot;: {&quot;name&quot;: &quot;3.Saccadic and antisaccadic movement eye-tracking test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_4&quot;: {&quot;name&quot;: &quot;4.Smooth pursuit eye-tracking test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_5&quot;: {&quot;name&quot;: &quot;5.Visual search eye-tracking test&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True}&amp;#10;        }&amp;#10;    },&amp;#10;    &quot;module_3&quot;: {&amp;#10;        &quot;name&quot;: &quot;MODULE 3: Dynamic Pupilometry and Autonomic Response (sweating and Heart Rate Variability) to Visual Stimuli&quot;,&amp;#10;        &quot;selected&quot;: False,&amp;#10;        &quot;tests&quot;: {&amp;#10;            &quot;test_1&quot;: {&quot;name&quot;: &quot;1.Elementary full-field achromatic and chromatic light stimulus&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True},&amp;#10;            &quot;test_2&quot;: {&quot;name&quot;: &quot;2.Fearful and affective semantic stimuli (images)&quot;, &quot;selected&quot;: False, &quot;enabled&quot;: True}&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;&amp;#10;def update_module_from_tests(module_id):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Marca automáticamente el módulo como seleccionado si al menos un test está seleccionado.&amp;#10;    &quot;&quot;&quot;&amp;#10;    any_test_selected = any(test_var.get() for test_var in test_vars[module_id].values())&amp;#10;    module_vars[module_id].set(any_test_selected)&amp;#10;&amp;#10;def update_tests(module_id, var):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Actualiza los estados de los tests al seleccionar/deseleccionar un módulo.&amp;#10;    &quot;&quot;&quot;&amp;#10;    is_selected = var.get()&amp;#10;    for test_id, test in modules[module_id][&quot;tests&quot;].items():&amp;#10;        if test[&quot;enabled&quot;]:&amp;#10;            test_vars[module_id][test_id].set(is_selected)&amp;#10;&amp;#10;def save_selection():&amp;#10;    &quot;&quot;&quot;&amp;#10;    Guarda los valores seleccionados en el diccionario original y cierra la ventana.&amp;#10;    &quot;&quot;&quot;&amp;#10;    for module_id, module in modules.items():&amp;#10;        module[&quot;selected&quot;] = module_vars[module_id].get()&amp;#10;        for test_id, test in module[&quot;tests&quot;].items():&amp;#10;            test[&quot;selected&quot;] = test_vars[module_id][test_id].get()&amp;#10;    &amp;#10;    # Guardar valores de configuración general&amp;#10;    general_config[&quot;feedback&quot;] = feedback_var.get()&amp;#10;    general_config[&quot;logs&quot;] = logs_var.get()&amp;#10;    general_config[&quot;full_screen_noise&quot;] = noise_var.get()&amp;#10;    general_config[&quot;gabor_texture&quot;] = mask_var.get()&amp;#10;    general_config[&quot;pretest_standard_values&quot;] = pretest_values_var.get()&amp;#10;    &amp;#10;    root.destroy()&amp;#10;&amp;#10;# Crear la ventana principal&amp;#10;root = tk.Tk()&amp;#10;root.title(&quot;Select Modules and Tests&quot;)&amp;#10;&amp;#10;# Variables de control&amp;#10;module_vars = {}&amp;#10;test_vars = {}&amp;#10;&amp;#10;# Crear widgets dinámicos&amp;#10;for module_id, module in modules.items():&amp;#10;    module_vars[module_id] = tk.BooleanVar(value=module[&quot;selected&quot;])&amp;#10;    module_checkbox = ttk.Checkbutton(&amp;#10;        root, text=module[&quot;name&quot;], variable=module_vars[module_id],&amp;#10;        command=lambda mid=module_id, var=module_vars[module_id]: update_tests(mid, var)&amp;#10;    )&amp;#10;    module_checkbox.pack(anchor=&quot;w&quot;, padx=10, pady=5)&amp;#10;    &amp;#10;    test_vars[module_id] = {}&amp;#10;    for test_id, test in module[&quot;tests&quot;].items():&amp;#10;        test_vars[module_id][test_id] = tk.BooleanVar(value=test[&quot;selected&quot;])&amp;#10;        test_checkbox = ttk.Checkbutton(&amp;#10;            root, text=test[&quot;name&quot;], variable=test_vars[module_id][test_id],&amp;#10;            command=lambda mid=module_id: update_module_from_tests(mid),&amp;#10;            state=tk.NORMAL if test[&quot;enabled&quot;] else tk.DISABLED&amp;#10;        )&amp;#10;        test_checkbox.pack(anchor=&quot;w&quot;, padx=30)&amp;#10;&amp;#10;# Checkboxes para configuración general&amp;#10;feedback_var = tk.BooleanVar(value=general_config[&quot;feedback&quot;])&amp;#10;logs_var = tk.BooleanVar(value=general_config[&quot;logs&quot;])&amp;#10;noise_var = tk.BooleanVar(value=general_config[&quot;full_screen_noise&quot;])&amp;#10;mask_var = tk.StringVar(value=&quot;gauss&quot;)  # Valor por defecto&amp;#10;pretest_values_var = tk.BooleanVar(value=general_config[&quot;pretest_standard_values&quot;])&amp;#10;&amp;#10;feedback_checkbox = ttk.Checkbutton(root, text=&quot;Enable Feedback&quot;, variable=feedback_var)&amp;#10;feedback_checkbox.pack(anchor=&quot;w&quot;, padx=10, pady=5)&amp;#10;&amp;#10;logs_checkbox = ttk.Checkbutton(root, text=&quot;Enable Logs&quot;, variable=logs_var)&amp;#10;logs_checkbox.pack(anchor=&quot;w&quot;, padx=10, pady=5)&amp;#10;&amp;#10;noise_checkbox = ttk.Checkbutton(root, text=&quot;Full Screen Noise&quot;, variable=noise_var)&amp;#10;noise_checkbox.pack(anchor=&quot;w&quot;, padx=10, pady=5)&amp;#10;&amp;#10;mask_combobox = ttk.Combobox(root, textvariable=mask_var, values=[&quot;gauss&quot;, &quot;circle&quot;], state=&quot;readonly&quot;)&amp;#10;mask_combobox.pack(anchor=&quot;w&quot;, padx=10, pady=5)&amp;#10;&amp;#10;noise_checkbox = ttk.Checkbutton(root, text=&quot;Use standard values for pretest&quot;, variable=pretest_values_var)&amp;#10;noise_checkbox.pack(anchor=&quot;w&quot;, padx=10, pady=5)&amp;#10;&amp;#10;# Botón para guardar y cerrar&amp;#10;save_button = ttk.Button(root, text=&quot;Continue&quot;, command=save_selection)&amp;#10;save_button.pack(pady=20)&amp;#10;&amp;#10;# Ejecutar la ventana&amp;#10;root.mainloop()&amp;#10;&amp;#10;# Mostrar la selección final&amp;#10;print(&quot;Selección final:&quot;)&amp;#10;for module_id, module in modules.items():&amp;#10;    print(f&quot;{module['name']}: {module['selected']}&quot;)&amp;#10;    for test_id, test in module[&quot;tests&quot;].items():&amp;#10;        print(f&quot;  - {test['name']}: {test['selected']} (Enabled: {test['enabled']})&quot;)&amp;#10;print(f&quot;Feedback: {general_config['feedback']}&quot;)&amp;#10;print(f&quot;Logs: {general_config['logs']}&quot;)" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="MODULE_SELECTION_GUI" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="SACCADE_TASK">
      <RoutineSettingsComponent name="SACCADE_TASK" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="SACCADE_TASK" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_12" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# GLOBAL VARIABLES: POSITION OF FIXATION POINT AND PERIPHEREAL STIMULI POSITION&amp;#10;&amp;#10;#3 POSSIBLE POSITIONS:&amp;#10;FIXATION_POS = (0,0)&amp;#10;PERIPHEREAL_POS_L = (-0.75,0)&amp;#10;PERIPHEREAL_POS_R = (0.75,0)&amp;#10;&amp;#10;IPAST_stim_position = (0,0) # ESTE VALOR ES VARIABLE (CAMBIA SEGUN LA SECUENCIA IPAST)&amp;#10;&amp;#10;# OTHER&amp;#10;REST_TIME = 1&amp;#10;IPAST_fixation_cross_size = (0.05, 0.05)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;&amp;#10;# CHANGE BACKGROUND COLOR TO BALCK&amp;#10;win.color = &quot;black&quot;&amp;#10;&amp;#10;# SHOW STIMULI WITH COLOR&amp;#10;if task_type == &quot;saccade&quot;:&amp;#10;    polygon_5.color = &quot;green&quot;&amp;#10;elif task_type == &quot;antisaccade&quot;:&amp;#10;    polygon_5.color = &quot;red&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="# SEQUENCE&amp;#10;&amp;#10;# SHOW / HIDE STIMULI&amp;#10;if t&gt; 3.5 + REST_TIME: # End of Routine&amp;#10;    polygon_5.setAutoDraw(False)&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;elif t&gt;1.2 + REST_TIME: # Saccade time&amp;#10;    if alignment == &quot;l&quot;:&amp;#10;        IPAST_stim_position = PERIPHEREAL_POS_L&amp;#10;    elif alignment == &quot;r&quot;:&amp;#10;        IPAST_stim_position = PERIPHEREAL_POS_R&amp;#10;    polygon_5.color = &quot;white&quot;&amp;#10;    polygon_5.setAutoDraw(True)&amp;#10;    &amp;#10;elif t&gt;1 + REST_TIME:&amp;#10;    polygon_5.setAutoDraw(False)&amp;#10;    &amp;#10;elif t&gt;0 + REST_TIME:&amp;#10;    polygon_5.setAutoDraw(True)&amp;#10;    IPAST_stim_position = FIXATION_POS&amp;#10;    &amp;#10;else: # wait some time between trials&amp;#10;    polygon_5.setAutoDraw(False)&amp;#10;&amp;#10;text_2.text = f&quot;Time: {t:.2f}&quot;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="cross_1" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_1" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="IPAST_stim_position" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="IPAST_fixation_cross_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="cross_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="PERIPHEREAL_POS_L" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="IPAST_fixation_cross_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="cross_3" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="cross_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="PERIPHEREAL_POS_R" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="IPAST_fixation_cross_size" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="polygon_5" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="IPAST_stim_position" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.15, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_27" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_27" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ET_RESTING_STATE">
      <RoutineSettingsComponent name="ET_RESTING_STATE" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ET_RESTING_STATE" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="win.color = &quot;black&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;eye_tracking_resting_time:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(eye_tracking_resting_time-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_8" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_8" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="routine_1">
      <RoutineSettingsComponent name="routine_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="routine_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_countdown_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_countdown_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="10" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(10-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="ET_SCREEN_POINT_TASK">
      <RoutineSettingsComponent name="ET_SCREEN_POINT_TASK" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="ET_SCREEN_POINT_TASK" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_27" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="win.color = &quot;black&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;eye_tracking_resting_time:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_27" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_5" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0.5)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$str(eye_tracking_resting_time-int(t))" valType="str" updates="set every frame" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="polygon_9" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="cross" valType="str" updates="None" name="shape"/>
        <Param val="(0.04, 0.04)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_26" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_26" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="VISUAL_SEARCH_RINGS">
      <RoutineSettingsComponent name="VISUAL_SEARCH_RINGS" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="VISUAL_SEARCH_RINGS" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_28" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as re from 're';&amp;#10;function calcular_relacion_aspecto(nombre_archivo) {&amp;#10;    /*&amp;#10;    Extrae los números del primer paréntesis en el nombre del archivo y calcula la relación de aspecto.&amp;#10;&amp;#10;    :param nombre_archivo: Nombre del archivo (str).&amp;#10;    :return: Relación de aspecto (float).&amp;#10;    */&amp;#10;    var columnas, filas, match, relacion_aspecto;&amp;#10;    match = re.search(&quot;\\((\\d+),\\s*(\\d+)\\)&quot;, nombre_archivo);&amp;#10;    if (match) {&amp;#10;        filas = Number.parseInt(match.group(1));&amp;#10;        columnas = Number.parseInt(match.group(2));&amp;#10;        relacion_aspecto = (filas / columnas);&amp;#10;        return relacion_aspecto;&amp;#10;    } else {&amp;#10;        throw new ValueError(&quot;No se encontraron n\u00fameros en el primer par\u00e9ntesis del nombre del archivo.&quot;);&amp;#10;    }&amp;#10;}&amp;#10;nombre_archivo = &quot;matriz_anillos_(5,7)--(4, 4).png&quot;;&amp;#10;relacion = calcular_relacion_aspecto(nombre_archivo);&amp;#10;console.log(`Relación de aspecto: ${util.pad(Number.parseFloat(relacion).toFixed(2), 1)}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import re&amp;#10;&amp;#10;win.color = &quot;white&quot;&amp;#10;&amp;#10;def calcular_relacion_aspecto(ruta_archivo):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Extrae los números del primer paréntesis en el nombre del archivo y calcula la relación de aspecto.&amp;#10;    &amp;#10;    :param ruta_archivo: Ruta completa o nombre del archivo (str).&amp;#10;    :return: Relación de aspecto (float).&amp;#10;    &quot;&quot;&quot;&amp;#10;    # Extraer solo el nombre del archivo (ignorar la ruta previa)&amp;#10;    nombre_archivo = ruta_archivo.split(&quot;\\&quot;)[-1] if &quot;\\&quot; in ruta_archivo else ruta_archivo.split(&quot;/&quot;)[-1]&amp;#10;&amp;#10;    # Buscar el primer paréntesis y extraer los números&amp;#10;    match = re.search(r&quot;\((\d+),\s*(\d+)\)&quot;, nombre_archivo)&amp;#10;    if match:&amp;#10;        filas = int(match.group(1))&amp;#10;        columnas = int(match.group(2))&amp;#10;        # Calcular la relación de aspecto (filas/columnas)&amp;#10;        relacion_aspecto = filas / columnas&amp;#10;        return relacion_aspecto&amp;#10;    else:&amp;#10;        raise ValueError(&quot;No se encontraron números en el primer paréntesis del nombre del archivo.&quot;)&amp;#10;&amp;#10;relacion_aspecto = calcular_relacion_aspecto(ruta_absoluta)&amp;#10;print(f&quot;Relación de aspecto: {relacion_aspecto:.2f}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;visual_search_image_time + visual_search_wait_time:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_28" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="rings_img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ruta_absoluta" valType="file" updates="set every repeat" name="image"/>
        <Param val="nearest" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="rings_img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1 / relacion_aspecto,1)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="visual_search_image_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_28" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_28" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="FEARFUL_AND_AFFECTIVE_IMAGES_TASK">
      <RoutineSettingsComponent name="FEARFUL_AND_AFFECTIVE_IMAGES_TASK" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="FEARFUL_AND_AFFECTIVE_IMAGES_TASK" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_29" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import * as re from 're';&amp;#10;function calcular_relacion_aspecto(nombre_archivo) {&amp;#10;    /*&amp;#10;    Extrae los números del primer paréntesis en el nombre del archivo y calcula la relación de aspecto.&amp;#10;&amp;#10;    :param nombre_archivo: Nombre del archivo (str).&amp;#10;    :return: Relación de aspecto (float).&amp;#10;    */&amp;#10;    var columnas, filas, match, relacion_aspecto;&amp;#10;    match = re.search(&quot;\\((\\d+),\\s*(\\d+)\\)&quot;, nombre_archivo);&amp;#10;    if (match) {&amp;#10;        filas = Number.parseInt(match.group(1));&amp;#10;        columnas = Number.parseInt(match.group(2));&amp;#10;        relacion_aspecto = (filas / columnas);&amp;#10;        return relacion_aspecto;&amp;#10;    } else {&amp;#10;        throw new ValueError(&quot;No se encontraron n\u00fameros en el primer par\u00e9ntesis del nombre del archivo.&quot;);&amp;#10;    }&amp;#10;}&amp;#10;nombre_archivo = &quot;matriz_anillos_(5,7)--(4, 4).png&quot;;&amp;#10;relacion = calcular_relacion_aspecto(nombre_archivo);&amp;#10;console.log(`Relación de aspecto: ${util.pad(Number.parseFloat(relacion).toFixed(2), 1)}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;def calcular_relacion_aspecto(ruta_archivo):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Calcula la relación de aspecto de una imagen a partir de su anchura y altura.&amp;#10;    &amp;#10;    :param ruta_archivo: Ruta completa de la imagen (str).&amp;#10;    :return: Relación de aspecto (float).&amp;#10;    &quot;&quot;&quot;&amp;#10;    try:&amp;#10;        with Image.open(ruta_archivo) as img:&amp;#10;            anchura, altura = img.size&amp;#10;            return anchura / altura&amp;#10;    except Exception as e:&amp;#10;        raise ValueError(f&quot;Error al abrir la imagen: {e}&quot;)&amp;#10;&amp;#10;relacion_aspecto = calcular_relacion_aspecto(ruta_absoluta)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if t&gt;autonomic_response_image_time + autonomic_response_wait_time:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_29" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="img" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ruta_absoluta" valType="file" updates="set every repeat" name="image"/>
        <Param val="nearest" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="img" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(relacion_aspecto,1)" valType="list" updates="set every repeat" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="autonomic_response_image_time" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="512" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_29" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_29" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="calibration_routine"/>
    <Routine name="CONFIGURATION_ROUTINE"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_1&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="MODULE_1_PRETEST">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_1&quot;][&quot;tests&quot;][&quot;pretest&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_1_PRETEST" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="spatial_freq_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'SPATIAL FREQUENCY THRESHOLD STAIRCASE TEST', 'instruction_1': 'En este experimento, evaluaremos tu capacidad para percibir las líneas de un patrón visual conocido como parche de Gabor', 'instruction_2': 'Observa la pantalla: Aparecerá un patrón de líneas', 'instruction_3': 'Si puedes ver las líneas del patrón, pulsa la tecla S. Si no puedes ver las líneas (parece una imagen borrosa o uniforme), pulsa la tecla N.', 'instruction_4': 'No te preocupes por acertar, lo importante es que indiques lo que ves.', 'instruction_5': 'Pulsa la barra espaciadora cuando quieras empezar la prueba'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/spatial_frequency_staircase_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="spatial_freq_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="spatial_freq_instructions"/>
    <Routine name="SPATIAL_FREQ_STAIRCASE_TEST"/>
    <LoopInitiator loopType="TrialHandler" name="contrast_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'SPATIAL FREQUENCY THRESHOLD STAIRCASE TEST', 'instruction_1': 'Observa la pantalla: Aparecerá un patrón de líneas con diferentes grados de contraste.', 'instruction_2': 'Si puedes ver las líneas del patrón, pulsa la tecla S.', 'instruction_3': 'Si no puedes ver las líneas (la imagen parece completamente uniforme o sin detalles), pulsa la tecla N.', 'instruction_4': None, 'instruction_5': 'Pulsa la barra espaciadora cuando quieras empezar la prueba'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/contrast_staircase_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="contrast_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="contrast_instructions"/>
    <Routine name="CONTRAST_STAIRCASE_TEST"/>
    <LoopInitiator loopType="TrialHandler" name="color_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'COLOR/SATURATION  THRESHOLD STAIRCASE TEST', 'instruction_1': 'Observa la pantalla: Aparecerá un patrón de líneas con diferentes colores.', 'instruction_2': 'Si puedes diferenciar los colores, pulsa la tecla S.', 'instruction_3': 'Si ves un color uniforme, pulsa la tecla N.', 'instruction_4': None, 'instruction_5': 'Pulsa la barra espaciadora cuando quieras empezar la prueba'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/color_staircase_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="color_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="color_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="colors_to_test">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'color_name': 'red', 'color_h': 0, 'color_v': 100}, {'color_name': 'green', 'color_h': 120, 'color_v': 100}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="colors_to_test.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="colors_to_test" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="COLOR_STAIRCASE_TEST"/>
    <LoopTerminator name="colors_to_test"/>
    <LoopTerminator name="MODULE_1_PRETEST"/>
    <Routine name="LOAD_THRESHOLDS"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_1_TEST_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_1&quot;][&quot;tests&quot;][&quot;test_1&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_1_TEST_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="BL1_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'BLOQUE 1: FRECUENCIA ESPACIAL', 'instruction_1': 'Una vez completada la fase de calibración, vamos a por el test!. ', 'instruction_2': 'Debes usar las flechas del teclado (derecha/izquierda) para responder a la siguiente pregunta: ¿Qué orientación tiene el parche? Solo tienes 2 segundos para ver el estímulo.', 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/BL1_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="BL1_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="BL1_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 'BL1_1'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 0)]), OrderedDict([('intento', 'BL1_2'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 0)]), OrderedDict([('intento', 'BL1_3'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', -1)]), OrderedDict([('intento', 'BL1_4'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', -1)]), OrderedDict([('intento', 'BL1_5'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', -1)]), OrderedDict([('intento', 'BL1_6'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', -1)]), OrderedDict([('intento', 'BL1_7'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', -2)]), OrderedDict([('intento', 'BL1_8'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', -2)]), OrderedDict([('intento', 'BL1_9'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', -2)]), OrderedDict([('intento', 'BL1_10'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', -2)]), OrderedDict([('intento', 'BL1_11'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', -2)]), OrderedDict([('intento', 'BL1_12'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', -2)]), OrderedDict([('intento', 'BL1_13'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', -3)]), OrderedDict([('intento', 'BL1_14'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', -3)]), OrderedDict([('intento', 'BL1_15'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', -3)]), OrderedDict([('intento', 'BL1_16'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -3)]), OrderedDict([('intento', 'BL1_17'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -3)]), OrderedDict([('intento', 'BL1_18'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -3)]), OrderedDict([('intento', 'BL1_19'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -4)]), OrderedDict([('intento', 'BL1_20'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -4)]), OrderedDict([('intento', 'BL1_21'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -4)]), OrderedDict([('intento', 'BL1_22'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -4)]), OrderedDict([('intento', 'BL1_23'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -4)]), OrderedDict([('intento', 'BL1_24'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -5)]), OrderedDict([('intento', 'BL1_25'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('offset_porcentual', -5)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL1.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_1_SPATIAL_FREQ"/>
    <LoopTerminator name="trials_bl_1"/>
    <LoopTerminator name="MODULE_1_TEST_1"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_1_TEST_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_1&quot;][&quot;tests&quot;][&quot;test_2&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_1_TEST_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="BL2_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'BLOQUE 2: COLOR/SATURACIÓN', 'instruction_1': None, 'instruction_2': 'Debes usar las flechas del teclado (derecha/izquierda) para responder a la siguiente pregunta: ¿Qué orientación tiene el parche? Solo tienes 2 segundos para ver el estímulo.', 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/BL2_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="BL2_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="BL2_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 'BL2_1'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 0), ('color_1_s', 85), ('color_1_v', 100), ('color_name', 'red'), ('umbral_porcentual', 20)]), OrderedDict([('intento', 'BL2_2'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 0), ('color_1_s', 80), ('color_1_v', 100), ('color_name', 'red'), ('umbral_porcentual', 20)]), OrderedDict([('intento', 'BL2_3'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 20), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 20)]), OrderedDict([('intento', 'BL2_4'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 10), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 20)]), OrderedDict([('intento', 'BL2_5'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 0), ('color_1_s', 20), ('color_1_v', 100), ('color_name', 'red'), ('umbral_porcentual', 20)]), OrderedDict([('intento', 'BL2_6'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 0), ('color_1_s', 10), ('color_1_v', 100), ('color_name', 'red'), ('umbral_porcentual', 10)]), OrderedDict([('intento', 'BL2_7'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 0), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 10)]), OrderedDict([('intento', 'BL2_8'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 90), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 10)]), OrderedDict([('intento', 'BL2_9'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 75), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 10)]), OrderedDict([('intento', 'BL2_10'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 60), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 10)]), OrderedDict([('intento', 'BL2_11'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 40), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 5)]), OrderedDict([('intento', 'BL2_12'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 0), ('color_1_s', 60), ('color_1_v', 100), ('color_name', 'red'), ('umbral_porcentual', 5)]), OrderedDict([('intento', 'BL2_13'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 0), ('color_1_s', 40), ('color_1_v', 100), ('color_name', 'red'), ('umbral_porcentual', 5)]), OrderedDict([('intento', 'BL2_14'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 5)]), OrderedDict([('intento', 'BL2_15'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 5)]), OrderedDict([('intento', 'BL2_16'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 6)]), OrderedDict([('intento', 'BL2_17'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 7)]), OrderedDict([('intento', 'BL2_18'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 8)]), OrderedDict([('intento', 'BL2_19'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 9)]), OrderedDict([('intento', 'BL2_20'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 10)]), OrderedDict([('intento', 'BL2_21'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 15)]), OrderedDict([('intento', 'BL2_22'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 15)]), OrderedDict([('intento', 'BL2_23'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 15)]), OrderedDict([('intento', 'BL2_24'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 15)]), OrderedDict([('intento', 'BL2_25'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', '-'), ('excentricidad', 0), ('frecuencia_espacial', 10), ('color_1_h', 120), ('color_1_s', 0), ('color_1_v', 100), ('color_name', 'green'), ('umbral_porcentual', 15)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL2.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_2_COLOR"/>
    <LoopTerminator name="trials_bl_2"/>
    <LoopTerminator name="MODULE_1_TEST_2"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_1_TEST_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_1&quot;][&quot;tests&quot;][&quot;test_3&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_1_TEST_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="BL3_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'BLOQUE 3: CONTRASTE', 'instruction_1': None, 'instruction_2': 'Debes usar las flechas del teclado (derecha/izquierda) para responder a la siguiente pregunta: ¿Qué orientación tiene el parche? Solo tienes 2 segundos para ver el estímulo.', 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/BL3_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="BL3_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="BL3_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 'BL3_1'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 0)]), OrderedDict([('intento', 'BL3_2'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 0)]), OrderedDict([('intento', 'BL3_3'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 0)]), OrderedDict([('intento', 'BL3_4'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 0)]), OrderedDict([('intento', 'BL3_5'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 0)]), OrderedDict([('intento', 'BL3_6'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 4)]), OrderedDict([('intento', 'BL3_7'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 4)]), OrderedDict([('intento', 'BL3_8'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 4)]), OrderedDict([('intento', 'BL3_9'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 4)]), OrderedDict([('intento', 'BL3_10'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 4)]), OrderedDict([('intento', 'BL3_11'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', 8)]), OrderedDict([('intento', 'BL3_12'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', 8)]), OrderedDict([('intento', 'BL3_13'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', 8)]), OrderedDict([('intento', 'BL3_14'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', 8)]), OrderedDict([('intento', 'BL3_15'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('offset_porcentual', 8)]), OrderedDict([('intento', 'BL3_16'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_17'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_18'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_19'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_20'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_21'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_22'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_23'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_24'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 10)]), OrderedDict([('intento', 'BL3_25'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('offset_porcentual', 10)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL3.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_3_CONTRAST"/>
    <LoopTerminator name="trials_bl_3"/>
    <LoopTerminator name="MODULE_1_TEST_3"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 'BL4_1'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 1)]), OrderedDict([('intento', 'BL4_2'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 2)]), OrderedDict([('intento', 'BL4_3'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 3)]), OrderedDict([('intento', 'BL4_4'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 4)]), OrderedDict([('intento', 'BL4_5'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'magno'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 5)]), OrderedDict([('intento', 'BL4_6'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 6)]), OrderedDict([('intento', 'BL4_7'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 7)]), OrderedDict([('intento', 'BL4_8'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 8)]), OrderedDict([('intento', 'BL4_9'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 9)]), OrderedDict([('intento', 'BL4_10'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'neutro'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 10)]), OrderedDict([('intento', 'BL4_11'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 15)]), OrderedDict([('intento', 'BL4_12'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 20)]), OrderedDict([('intento', 'BL4_13'), ('orientacion', 45), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 25)]), OrderedDict([('intento', 'BL4_14'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 30)]), OrderedDict([('intento', 'BL4_15'), ('orientacion', 135), ('posicion_angular', 0), ('tipo', 'parvo'), ('excentricidad', 0), ('frecuencia_espacial', 30), ('FFT', 10)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL4.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_4_TEMPORAL_FREQ"/>
    <LoopTerminator name="trials_bl_4"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_5">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 'BL5_1'), ('path', 'semantic_stims/objects/high_003_0018_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_2'), ('path', 'semantic_stims/objects/high_006_0043_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_3'), ('path', 'semantic_stims/objects/high_023_0016_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_4'), ('path', 'semantic_stims/objects/high_063_0011_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_5'), ('path', 'semantic_stims/objects/low_167_0002_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_6'), ('path', 'semantic_stims/objects/high_146_0007_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_7'), ('path', 'semantic_stims/objects/low_091_0051_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_8'), ('path', 'semantic_stims/objects/low_029_0008_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_9'), ('path', 'semantic_stims/objects/high_003_0018_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_10'), ('path', 'semantic_stims/objects/low_016_0001_background_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_11'), ('path', 'semantic_stims/animals/high_B_N253081_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'vivo'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_12'), ('path', 'semantic_stims/animals/high_B_N771063_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'vivo'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_13'), ('path', 'semantic_stims/animals/high_H_N105074_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'vivo'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_14'), ('path', 'semantic_stims/animals/high_M_N70025_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'vivo'), ('tamanyo', 0.35)]), OrderedDict([('intento', 'BL5_15'), ('path', 'semantic_stims/animals/high_M_N197092_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'vivo'), ('tamanyo', 0.35)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL5.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_5" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_5_SEMANTIC_STIM"/>
    <LoopTerminator name="trials_bl_5"/>
    <Routine name="BL6_"/>
    <LoopInitiator loopType="TrialHandler" name="trials_bl_7">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('intento', 'BL7_1'), ('path', 'semantic_stims/objects/raw_BW/003_0018_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 2.0)]), OrderedDict([('intento', 'BL7_2'), ('path', 'semantic_stims/objects/raw_BW/004_0015_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 2.5)]), OrderedDict([('intento', 'BL7_3'), ('path', 'semantic_stims/objects/raw_BW/005_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 2.5)]), OrderedDict([('intento', 'BL7_4'), ('path', 'semantic_stims/objects/raw_BW/006_0043_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 4.0)]), OrderedDict([('intento', 'BL7_5'), ('path', 'semantic_stims/objects/raw_BW/012_0006_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 4.0)]), OrderedDict([('intento', 'BL7_6'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 4.0)]), OrderedDict([('intento', 'BL7_7'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 4.0)]), OrderedDict([('intento', 'BL7_8'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 4.0)]), OrderedDict([('intento', 'BL7_9'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 6.0)]), OrderedDict([('intento', 'BL7_10'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 6.0)]), OrderedDict([('intento', 'BL7_11'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 6.0)]), OrderedDict([('intento', 'BL7_12'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 6.0)]), OrderedDict([('intento', 'BL7_13'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 6.0)]), OrderedDict([('intento', 'BL7_14'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 8.0)]), OrderedDict([('intento', 'BL7_15'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 8.0)]), OrderedDict([('intento', 'BL7_16'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 8.0)]), OrderedDict([('intento', 'BL7_17'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 8.0)]), OrderedDict([('intento', 'BL7_18'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 8.0)]), OrderedDict([('intento', 'BL7_19'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 10.0)]), OrderedDict([('intento', 'BL7_20'), ('path', 'semantic_stims/objects/raw_BW/095_0014_bw.png'), ('posicion_angular', 0.0), ('tipo', '-'), ('excentricidad', 0.0), ('respuesta', 'inerte'), ('tamanyo', 0.25), ('offset_porcentual', 10.0)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="BL7.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_bl_7" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="BL_7_CONTRAST"/>
    <LoopTerminator name="trials_bl_7"/>
    <LoopTerminator name="MODULE_1"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_2&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="MODULE_2_TEST_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_2&quot;][&quot;tests&quot;][&quot;test_1&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_2_TEST_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="et_resting_state_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'EYE TRACKING (I)', 'instruction_1': 'Mira a la pantalla durante 60 segundos', 'instruction_2': None, 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/et_resting_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="et_resting_state_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="et_resting_state_instructions"/>
    <Routine name="ET_RESTING_STATE"/>
    <LoopInitiator loopType="TrialHandler" name="et_task_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'EYE TRACKING', 'instruction_1': 'Mira al estímulo que aparece en el centro de la pantalla durante 60 segundos', 'instruction_2': None, 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/et_task_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="et_task_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="et_task_instructions"/>
    <Routine name="ET_SCREEN_POINT_TASK"/>
    <LoopTerminator name="MODULE_2_TEST_1"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_2_TEST_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_2&quot;][&quot;tests&quot;][&quot;test_2&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_2_TEST_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'BLOQUE 4: FLICKER', 'instruction_1': None, 'instruction_2': 'Debes usar las flechas del teclado (derecha/izquierda) para responder a la siguiente pregunta: ¿Qué orientación tiene el parche? Solo tienes 2 segundos para ver el estímulo.', 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/BL4_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="trials"/>
    <Routine name="FFT_STAIRCASE_TEST"/>
    <LoopTerminator name="MODULE_2_TEST_2"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_2_TEST_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_2&quot;][&quot;tests&quot;][&quot;test_3&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_2_TEST_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="et_saccade_task_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'EYE TRACKING', 'instruction_1': 'Mira atentamente al estímulo que sale en el centro de la pantalla.', 'instruction_2': 'Si el estímulo es de color verde, cuando este se mueva deber apuntar con tu mirada lo más rápido posible al estímulo. ', 'instruction_3': 'Si el estímulo es de color rojo, debes mirar al lado contrario al que se mueve. ', 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/et_saccade_task_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="et_saccade_task_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="et_saccade_task_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="IPAST_LOOP">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'task_type': 'saccade', 'alignment': 'l'}, {'task_type': 'antisaccade', 'alignment': 'r'}, {'task_type': 'saccade', 'alignment': 'l'}, {'task_type': 'antisaccade', 'alignment': 'r'}, {'task_type': 'saccade', 'alignment': 'l'}, {'task_type': 'antisaccade', 'alignment': 'r'}, {'task_type': 'saccade', 'alignment': 'l'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="IPAST_loop.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="IPAST_LOOP" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="SACCADE_TASK"/>
    <LoopTerminator name="IPAST_LOOP"/>
    <LoopTerminator name="MODULE_2_TEST_3"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_2_TEST_4">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_2&quot;][&quot;tests&quot;][&quot;test_4&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_2_TEST_4" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="DVS_coherence_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'DVS TASK', 'instruction_1': 'En esta tarea debes seguir con la mirada el estímulo de color', 'instruction_2': 'Verás que se esconde del resto de puntos y que el movimiento del estímulo principal y del resto de bolas cambiará a lo largo del tiempo. Trata de seguirlo con la mayor precisión posible.', 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/DVS_tracking_task_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="DVS_coherence_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="DVS_coherence_instructions"/>
    <Routine name="DVS_COHERENCE"/>
    <LoopTerminator name="MODULE_2_TEST_4"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_2_TEST_5">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_2&quot;][&quot;tests&quot;][&quot;test_5&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_2_TEST_5" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="visual_search_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'VISUAL SEARCH TEST', 'instruction_1': 'Observa las distintas imágenes que aparecerán a continuación.', 'instruction_2': None, 'instruction_3': None, 'instruction_4': None, 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/visual_search_task_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="visual_search_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="visual_search_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('ruta_absoluta', 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\autogenerated_datasets\\visual_search_rings\\matriz_anillos_(5,7)--(0, 4).png')]), OrderedDict([('ruta_absoluta', 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\autogenerated_datasets\\visual_search_rings\\matriz_anillos_(5,7)--(1, 5).png')]), OrderedDict([('ruta_absoluta', 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\autogenerated_datasets\\visual_search_rings\\matriz_anillos_(5,7)--(2, 0).png')]), OrderedDict([('ruta_absoluta', 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\autogenerated_datasets\\visual_search_rings\\matriz_anillos_(5,7)--(2, 3).png')]), OrderedDict([('ruta_absoluta', 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\autogenerated_datasets\\visual_search_rings\\matriz_anillos_(5,7)--(4, 4).png')]), OrderedDict([('ruta_absoluta', 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\autogenerated_datasets\\visual_search_rings\\matriz_anillos_(5,7)--(6, 0).png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="images/autogenerated_datasets/visual_search_rings/rutas_imagenes.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="VISUAL_SEARCH_RINGS"/>
    <LoopTerminator name="trials_2"/>
    <LoopInitiator loopType="TrialHandler" name="visual_search_imgs">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\bathroom_23_c_l_toiletpaper.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\bedroom_10_c_l_hanger.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\bedroom_20_i_sr_bleach.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\bedroom_27_i_r_pingpongpaddle.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\bedroom_4_c_r_lamp.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\bedroom_8_i_l_sieve.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\kitchen_8_i_sl_mouse.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\office_1_i_l_rollingpin.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\office_23_i_sl_toycar.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\office_30_c_sl_book.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\waitingroom_12_i_sl_belt.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\waitingroom_1_i_l_kettle.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\waitingroom_22_c_sr_scarf.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\waitingroom_23_i_sr_sweetpotato.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\waitingroom_24_i_sr_washingupliquid.jpg'}, {'path': 'c:\\Users\\akoun\\Desktop\\Biocruces\\siburmuin\\src\\begiBrainDemo\\images\\visual_search\\waitingroom_6_i_r_controller.jpg'}, {'path': None}, {'path': None}, {'path': None}, {'path': None}, {'path': None}, {'path': None}, {'path': None}, {'path': None}, {'path': None}, {'path': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="visual_search_loop_images.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="visual_search_imgs" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="ET_VISUAL_SEARCH"/>
    <LoopTerminator name="visual_search_imgs"/>
    <LoopTerminator name="MODULE_2_TEST_5"/>
    <LoopTerminator name="MODULE_2"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_3">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_3&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_3" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="MODULE_3_TEST_1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_3&quot;][&quot;tests&quot;][&quot;test_1&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_3_TEST_1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="pupilometry_instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'PUPILOMETRÍA', 'instruction_1': 'En esta prueba vamos a analizar la dilatación de tus pupilas', 'instruction_2': 'El primer paso es acostumbrarse a la oscuridad para que las pupilas se dilaten por completo.', 'instruction_3': 'Después de 10 minutos de espera con la pantalla en negro, verás varios flashes de distintos colores. Es importante que no cierres los ojos en ese momento.', 'instruction_4': 'Pulsa siguiente para empezar.', 'instruction_5': None}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/pupilometry_task_instructions.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="pupilometry_instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="pupilometry_instructions"/>
    <LoopInitiator loopType="TrialHandler" name="pupilometry_config">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'adaptation_time': 10, 'color': 'white', 'flash_time': 2}, {'adaptation_time': 5, 'color': 'red', 'flash_time': 2}, {'adaptation_time': 5, 'color': 'blue', 'flash_time': 2}, {'adaptation_time': 2, 'color': 'black', 'flash_time': 2}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="pupilometry_colors_and_sequence.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="pupilometry_config" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="PUPILOMETRY_TASK_adaptation_period"/>
    <Routine name="PUPILOMETRY_TASK_flash"/>
    <LoopTerminator name="pupilometry_config"/>
    <LoopTerminator name="MODULE_3_TEST_1"/>
    <LoopInitiator loopType="TrialHandler" name="MODULE_3_TEST_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="modules[&quot;module_3&quot;][&quot;tests&quot;][&quot;test_2&quot;][&quot;selected&quot;]" valType="num"/>
      <Param name="name" updates="None" val="MODULE_3_TEST_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="fearful_and_affective_images_insructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'title': 'SPATIAL FREQUENCY THRESHOLD STAIRCASE TEST', 'instruction_1': 'En este experimento, evaluaremos tu capacidad para percibir las líneas de un patrón visual conocido como parche de Gabor', 'instruction_2': 'Observa la pantalla: Aparecerá un patrón de líneas', 'instruction_3': 'Si puedes ver las líneas del patrón, pulsa la tecla S. Si no puedes ver las líneas (parece una imagen borrosa o uniforme), pulsa la tecla N.', 'instruction_4': 'No te preocupes por acertar, lo importante es que indiques lo que ves.', 'instruction_5': 'Pulsa la barra espaciadora cuando quieras empezar la prueba'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="instructions/fearful_and_affective_images_instrucitons.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="fearful_and_affective_images_insructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="INSTRUCTIONS"/>
    <LoopTerminator name="fearful_and_affective_images_insructions"/>
    <LoopInitiator loopType="TrialHandler" name="imgs_loop">
      <Param name="Selected rows" updates="None" val="1:10" valType="str"/>
      <Param name="conditions" updates="None" val="[{'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0001.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0002.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0003.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0004.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0005.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0006.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0007.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0008.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0009.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0010.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0011.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0012.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0013.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0014.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0015.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0016.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0017.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0018.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0019.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0020.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0021.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0022.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0023.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0024.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0025.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0026.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0027.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0028.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0029.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0030.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0031.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0032.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0033.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0034.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0035.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0036.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0037.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0038.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0039.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0040.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0041.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0042.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0043.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0044.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0045.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0046.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0047.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0048.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0049.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0050.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0051.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0052.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0053.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0054.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0055.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0056.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0057.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0058.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0059.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0060.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0061.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0062.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0063.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0064.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0065.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0066.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0067.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0068.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0069.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0070.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0071.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0072.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0073.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0074.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0075.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0076.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0077.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0078.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0079.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0080.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0081.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0082.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0083.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0084.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0085.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0086.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0087.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0088.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0089.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0090.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0091.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0092.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0093.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0094.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0095.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0096.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0097.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0098.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0099.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0001_0100\\EM0100.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0101.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0102.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0103.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0104.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0105.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0106.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0107.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0108.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0109.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0110.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0111.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0112.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0113.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0114.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0115.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0116.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0117.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0118.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0119.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0120.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0121.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0122.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0123.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0124.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0125.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0126.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0127.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0128.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0129.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0130.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0131.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0132.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0133.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0134.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0135.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0136.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0137.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0138.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0139.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0140.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0141.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0142.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0143.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0144.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0145.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0146.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0147.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0148.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0149.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0150.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0151.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0152.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0153.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0154.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0155.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0156.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0157.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0158.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0159.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0160.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0161.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0162.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0163.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0164.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0165.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0166.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0167.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0168.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0169.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0170.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0171.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0172.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0173.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0174.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0175.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0176.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0177.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0178.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0179.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0180.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0181.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0182.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0183.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0184.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0185.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0186.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0187.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0188.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0189.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0190.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0191.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0192.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0193.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0194.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0195.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0196.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0197.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0198.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0199.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0101_0200\\EM0200.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0201.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0202.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0203.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0204.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0205.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0206.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0207.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0208.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0209.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0210.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0211.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0212.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0213.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0214.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0215.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0216.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0217.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0218.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0219.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0220.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0221.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0222.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0223.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0224.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0225.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0226.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0227.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0228.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0229.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0230.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0231.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0232.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0233.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0234.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0235.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0236.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0237.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0238.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0239.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0240.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0241.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0242.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0243.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0244.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0245.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0246.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0247.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0248.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0249.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0250.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0251.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0252.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0253.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0254.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0255.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0256.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0257.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0258.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0259.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0260.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0261.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0262.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0263.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0264.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0265.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0266.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0267.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0268.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0269.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0270.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0271.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0272.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0273.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0274.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0275.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0276.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0277.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0278.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0279.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0280.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0281.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0282.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0283.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0284.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0285.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0286.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0287.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0288.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0289.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0290.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0291.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0292.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0293.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0294.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0295.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0296.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0297.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0298.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0299.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0201_0300\\EM0300.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0301.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0302.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0303.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0304.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0305.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0306.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0307.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0308.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0309.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0310.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0311.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0312.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0313.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0314.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0315.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0316.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0317.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0318.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0319.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0320.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0321.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0322.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0323.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0324.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0325.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0326.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0327.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0328.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0329.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0330.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0331.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0332.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0333.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0334.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0335.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0336.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0337.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0338.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0339.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0340.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0341.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0342.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0343.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0344.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0345.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0346.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0347.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0348.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0349.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0350.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0351.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0352.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0353.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0354.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0355.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0356.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0357.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0358.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0359.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0360.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0361.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0362.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0363.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0364.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0365.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0366.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0367.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0368.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0369.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0370.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0371.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0372.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0373.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0374.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0375.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0376.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0377.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0378.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0379.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0380.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0381.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0382.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0383.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0384.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0385.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0386.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0387.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0388.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0389.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0390.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0391.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0392.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0393.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0394.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0395.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0396.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0397.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0398.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0399.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0301_0400\\EM0400.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0401.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0402.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0403.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0404.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0405.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0406.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0407.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0408.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0409.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0410.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0411.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0412.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0413.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0414.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0415.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0416.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0417.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0418.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0419.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0420.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0421.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0422.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0423.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0424.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0425.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0426.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0427.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0428.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0429.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0430.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0431.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0432.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0433.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0434.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0435.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0436.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0437.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0438.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0439.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0440.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0441.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0442.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0443.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0444.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0445.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0446.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0447.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0448.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0449.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0450.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0451.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0452.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0453.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0454.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0455.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0456.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0457.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0458.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0459.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0460.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0461.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0462.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0463.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0464.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0465.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0466.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0467.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0468.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0469.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0470.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0471.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0472.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0473.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0474.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0475.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0476.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0477.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0478.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0479.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0480.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0481.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0482.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0483.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0484.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0485.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0486.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0487.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0488.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0489.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0490.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0491.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0492.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0493.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0494.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0495.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0496.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0497.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0498.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0499.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0401_0500\\EM0500.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0501.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0502.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0503.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0504.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0505.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0506.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0507.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0508.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0509.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0510.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0511.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0512.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0513.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0514.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0515.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0516.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0517.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0518.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0519.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0520.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0521.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0522.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0523.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0524.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0525.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0526.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0527.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0528.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0529.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0530.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0531.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0532.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0533.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0534.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0535.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0536.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0537.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0538.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0539.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0540.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0541.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0542.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0543.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0544.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0545.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0546.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0547.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0548.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0549.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0550.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0551.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0552.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0553.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0554.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0555.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0556.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0557.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0558.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0559.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0560.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0561.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0562.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0563.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0564.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0565.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0566.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0567.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0568.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0569.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0570.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0571.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0572.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0573.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0574.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0575.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0576.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0577.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0578.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0579.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0580.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0581.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0582.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0583.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0584.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0585.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0586.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0587.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0588.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0589.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0590.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0591.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0592.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0593.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0594.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0595.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0596.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0597.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0598.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0599.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0501_0600\\EM0600.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0601.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0602.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0603.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0604.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0605.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0606.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0607.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0608.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0609.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0610.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0611.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0612.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0613.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0614.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0615.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0616.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0617.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0618.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0619.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0620.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0621.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0622.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0623.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0624.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0625.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0626.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0627.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0628.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0629.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0630.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0631.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0632.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0633.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0634.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0635.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0636.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0637.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0638.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0639.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0640.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0641.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0642.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0643.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0644.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0645.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0646.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0647.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0648.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0649.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0650.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0651.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0652.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0653.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0654.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0655.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0656.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0657.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0658.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0659.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0660.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0661.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0662.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0663.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0664.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0665.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0666.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0667.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0668.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0669.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0670.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0671.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0672.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0673.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0674.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0675.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0676.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0677.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0678.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0679.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0680.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0681.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0682.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0683.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0684.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0685.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0686.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0687.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0688.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0689.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0690.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0691.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0692.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0693.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0694.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0695.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0696.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0697.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0698.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0699.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0601_0700\\EM0700.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0701.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0702.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0703.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0704.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0705.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0706.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0707.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0708.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0709.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0710.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0711.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0712.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0713.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0714.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0715.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0716.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0717.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0718.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0719.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0720.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0721.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0722.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0723.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0724.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0725.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0726.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0727.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0728.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0729.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0730.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0731.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0732.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0733.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0734.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0735.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0736.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0737.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0738.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0739.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0740.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0741.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0742.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0743.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0744.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0745.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0746.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0747.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0748.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0749.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0750.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0751.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0752.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0753.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0754.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0755.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0756.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0757.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0758.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0759.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0760.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0761.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0762.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0763.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0764.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0765.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0766.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0767.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0768.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0769.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0770.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0771.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0772.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0773.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0774.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0775.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0776.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0777.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0778.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0779.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0780.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0781.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0782.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0783.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0784.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0785.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0786.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0787.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0788.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0789.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0790.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0791.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0792.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0793.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0794.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0795.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0796.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0797.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0798.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0799.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0701_0800\\EM0800.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0801.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0802.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0803.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0804.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0805.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0806.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0807.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0808.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0809.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0810.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0811.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0812.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0813.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0814.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0815.JPG'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0816.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0817.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0818.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0819.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0820.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0821.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0822.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0823.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0824.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0825.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0826.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0827.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0828.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0829.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0830.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0831.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0832.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0833.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0834.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0835.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0836.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0837.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0838.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0839.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0840.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0841.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0842.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0843.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0844.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0845.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0846.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0847.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0848.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0849.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0850.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0851.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0852.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0853.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0854.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0855.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0856.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0857.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0858.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0859.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0860.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0861.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0862.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0863.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0864.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0865.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0866.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0867.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0868.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0869.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0870.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0871.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0872.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0873.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0874.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0875.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0876.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0877.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0878.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0879.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0880.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0881.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0882.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0883.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0884.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0885.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0886.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0887.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0888.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0889.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0890.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0891.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0892.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0893.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0894.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0895.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0896.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0897.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0898.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0899.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0801_0900\\EM0900.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0901.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0902.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0903.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0904.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0905.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0906.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0907.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0908.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0909.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0910.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0911.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0912.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0913.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0914.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0915.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0916.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0917.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0918.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0919.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0920.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0921.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0922.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0923.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0924.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0925.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0926.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0927.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0928.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0929.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0930.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0931.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0932.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0933.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0934.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0935.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0936.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0937.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0938.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0939.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0940.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0941.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0942.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0943.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0944.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0945.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0946.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0947.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0948.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0949.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0950.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0951.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0952.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0953.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0954.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0955.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0956.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0957.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0958.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0959.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0960.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0961.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0962.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0963.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0964.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0965.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0966.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0967.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0968.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0969.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0970.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0971.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0972.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0973.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0974.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0975.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0976.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0977.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0978.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0979.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0980.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0981.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0982.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0983.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0984.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0985.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0986.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0987.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0988.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0989.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0990.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0991.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0992.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0993.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0994.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0995.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0996.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0997.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0998.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM0999.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM0901_1000\\EM1000.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1001.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1002.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1003.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1004.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1005.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1006.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1007.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1008.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1009.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1010.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1011.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1012.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1013.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1014.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1015.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1016.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1017.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1018.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1019.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1020.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1021.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1022.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1023.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1024.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1025.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1026.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1027.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1028.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1029.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1030.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1031.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1032.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1033.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1034.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1035.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1036.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1037.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1038.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1039.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1040.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1041.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1042.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1043.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1044.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1045.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1046.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1047.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1048.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1049.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1050.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1051.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1052.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1053.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1054.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1055.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1056.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1057.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1058.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1059.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1060.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1061.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1062.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1063.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1064.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1065.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1066.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1067.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1068.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1069.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1070.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1071.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1072.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1073.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1074.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1075.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1076.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1077.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1078.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1079.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1080.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1081.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1082.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1083.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1084.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1085.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1086.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1087.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1088.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1089.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1090.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1091.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1092.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1093.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1094.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1095.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1096.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1097.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1098.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1099.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1001_1100\\EM1100.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1101.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1102.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1103.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1104.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1105.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1106.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1107.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1108.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1109.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1110.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1111.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1112.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1113.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1114.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1115.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1116.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1117.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1118.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1119.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1120.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1121.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1122.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1123.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1124.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1125.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1126.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1127.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1128.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1129.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1130.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1131.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1132.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1133.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1134.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1135.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1136.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1137.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1138.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1139.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1140.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1141.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1142.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1143.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1144.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1145.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1146.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1147.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1148.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1149.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1150.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1151.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1152.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1153.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1154.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1155.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1156.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1157.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1158.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1159.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1160.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1161.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1162.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1163.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1164.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1165.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1166.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1167.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1168.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1169.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1170.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1171.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1172.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1173.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1174.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1175.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1176.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1177.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1178.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1179.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1180.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1181.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1182.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1183.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1184.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1185.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1186.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1187.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1188.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1189.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1190.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1191.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1192.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1193.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1194.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1195.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1196.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1197.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1198.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1199.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1200.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1201.jpg'}, {'ruta_absoluta': 'c:\\Users\\akoun\\Desktop\\Biocruces\\2.DATASETS\\CEACO\\EM1101_1202\\EM1202.jpg'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="autonomic_response_loop_images.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="imgs_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="FEARFUL_AND_AFFECTIVE_IMAGES_TASK"/>
    <LoopTerminator name="imgs_loop"/>
    <LoopTerminator name="MODULE_3_TEST_2"/>
    <LoopTerminator name="MODULE_3"/>
  </Flow>
</PsychoPy2experiment>
